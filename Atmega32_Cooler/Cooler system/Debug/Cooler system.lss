
Cooler system.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000091a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000008  00800060  0000091a  000009ae  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000002  00800068  00800068  000009b6  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000009b6  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000009e8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000100  00000000  00000000  00000a24  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000108b  00000000  00000000  00000b24  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000008fa  00000000  00000000  00001baf  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000cdf  00000000  00000000  000024a9  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000200  00000000  00000000  00003188  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000493  00000000  00000000  00003388  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000009da  00000000  00000000  0000381b  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000b0  00000000  00000000  000041f5  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 e1 02 	jmp	0x5c2	; 0x5c2 <__vector_6>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	ea e1       	ldi	r30, 0x1A	; 26
  68:	f9 e0       	ldi	r31, 0x09	; 9
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a8 36       	cpi	r26, 0x68	; 104
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	20 e0       	ldi	r18, 0x00	; 0
  78:	a8 e6       	ldi	r26, 0x68	; 104
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	aa 36       	cpi	r26, 0x6A	; 106
  82:	b2 07       	cpc	r27, r18
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 61 00 	call	0xc2	; 0xc2 <main>
  8a:	0c 94 8b 04 	jmp	0x916	; 0x916 <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <ADC_init>:
* Parameters   : void
* Return value : void
**************************************************************************/
void ADC_init(void){
	//AVCC with external capacitor at AREF pin
	SETBIT(ADMUX,REFS0);
  92:	87 b1       	in	r24, 0x07	; 7
  94:	80 64       	ori	r24, 0x40	; 64
  96:	87 b9       	out	0x07, r24	; 7
	//Enable ADC
	SETBIT(ADCSRA,ADEN);
  98:	86 b1       	in	r24, 0x06	; 6
  9a:	80 68       	ori	r24, 0x80	; 128
  9c:	86 b9       	out	0x06, r24	; 6
	//freq mode 128
	SETBIT(ADCSRA,ADPS0);
  9e:	86 b1       	in	r24, 0x06	; 6
  a0:	81 60       	ori	r24, 0x01	; 1
  a2:	86 b9       	out	0x06, r24	; 6
	SETBIT(ADCSRA,ADPS1);
  a4:	86 b1       	in	r24, 0x06	; 6
  a6:	82 60       	ori	r24, 0x02	; 2
  a8:	86 b9       	out	0x06, r24	; 6
	SETBIT(ADCSRA,ADPS2);
  aa:	86 b1       	in	r24, 0x06	; 6
  ac:	84 60       	ori	r24, 0x04	; 4
  ae:	86 b9       	out	0x06, r24	; 6
  b0:	08 95       	ret

000000b2 <ADC_read>:
* Parameters   : void
* Return value : converting value from ADC register
**************************************************************************/
uint16_t ADC_read(void){
	//Start single conversion mode
	SETBIT(ADCSRA,ADSC);
  b2:	86 b1       	in	r24, 0x06	; 6
  b4:	80 64       	ori	r24, 0x40	; 64
  b6:	86 b9       	out	0x06, r24	; 6
	//check if the conversion complete or not
	while(READBIT(ADCSRA,ADSC) == 1);
  b8:	36 99       	sbic	0x06, 6	; 6
  ba:	fe cf       	rjmp	.-4      	; 0xb8 <ADC_read+0x6>
	//read the ADC
	return ADC;
  bc:	84 b1       	in	r24, 0x04	; 4
  be:	95 b1       	in	r25, 0x05	; 5
	
	
  c0:	08 95       	ret

000000c2 <main>:
#include "SEVEN_SEG.h"
#include "TIMER1.h"

int main(void)
{
    LCD_init();
  c2:	0e 94 2d 01 	call	0x25a	; 0x25a <LCD_init>
	ADC_init();
  c6:	0e 94 49 00 	call	0x92	; 0x92 <ADC_init>
	TIME1_PWM_oc1A_init();
  ca:	0e 94 bd 02 	call	0x57a	; 0x57a <TIME1_PWM_oc1A_init>
	SEVEN_SEG_init();
  ce:	0e 94 42 02 	call	0x484	; 0x484 <SEVEN_SEG_init>
	uint8_t temp = 0,speed = 0;
	SETBIT(DDRA,PINA7);
  d2:	8a b3       	in	r24, 0x1a	; 26
  d4:	80 68       	ori	r24, 0x80	; 128
  d6:	8a bb       	out	0x1a, r24	; 26
    while (1) 
    {
		temp = (ADC_read()*100/206) + 1;
  d8:	0e 94 59 00 	call	0xb2	; 0xb2 <ADC_read>
  dc:	44 e6       	ldi	r20, 0x64	; 100
  de:	48 9f       	mul	r20, r24
  e0:	90 01       	movw	r18, r0
  e2:	49 9f       	mul	r20, r25
  e4:	30 0d       	add	r19, r0
  e6:	11 24       	eor	r1, r1
  e8:	a9 e8       	ldi	r26, 0x89	; 137
  ea:	bf e4       	ldi	r27, 0x4F	; 79
  ec:	0e 94 68 04 	call	0x8d0	; 0x8d0 <__umulhisi3>
  f0:	8c 01       	movw	r16, r24
  f2:	00 24       	eor	r0, r0
  f4:	00 0f       	add	r16, r16
  f6:	11 1f       	adc	r17, r17
  f8:	00 1c       	adc	r0, r0
  fa:	00 0f       	add	r16, r16
  fc:	11 1f       	adc	r17, r17
  fe:	00 1c       	adc	r0, r0
 100:	01 2f       	mov	r16, r17
 102:	10 2d       	mov	r17, r0
 104:	c1 e0       	ldi	r28, 0x01	; 1
 106:	c0 0f       	add	r28, r16
		LCD_write_command(0x80);
 108:	80 e8       	ldi	r24, 0x80	; 128
 10a:	0e 94 bd 00 	call	0x17a	; 0x17a <LCD_write_command>
		LCD_write_string((uint8_t*)"TEMP = ");
 10e:	80 e6       	ldi	r24, 0x60	; 96
 110:	90 e0       	ldi	r25, 0x00	; 0
 112:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <LCD_write_string>
		LCD_write_num(temp);
 116:	6c 2f       	mov	r22, r28
 118:	70 e0       	ldi	r23, 0x00	; 0
 11a:	80 e0       	ldi	r24, 0x00	; 0
 11c:	90 e0       	ldi	r25, 0x00	; 0
 11e:	0e 94 f8 01 	call	0x3f0	; 0x3f0 <LCD_write_num>
		SEVEN_SEG_write_on2(temp);
 122:	8c 2f       	mov	r24, r28
 124:	0e 94 46 02 	call	0x48c	; 0x48c <SEVEN_SEG_write_on2>
		if((temp >= 35)&&(temp < 50)){
 128:	02 52       	subi	r16, 0x22	; 34
 12a:	0f 30       	cpi	r16, 0x0F	; 15
 12c:	b0 f4       	brcc	.+44     	; 0x15a <main+0x98>
			speed = (((temp-35) * 50)/15) + 50;
 12e:	2c 2f       	mov	r18, r28
 130:	30 e0       	ldi	r19, 0x00	; 0
 132:	23 52       	subi	r18, 0x23	; 35
 134:	31 09       	sbc	r19, r1
 136:	42 e3       	ldi	r20, 0x32	; 50
 138:	42 9f       	mul	r20, r18
 13a:	c0 01       	movw	r24, r0
 13c:	43 9f       	mul	r20, r19
 13e:	90 0d       	add	r25, r0
 140:	11 24       	eor	r1, r1
 142:	6f e0       	ldi	r22, 0x0F	; 15
 144:	70 e0       	ldi	r23, 0x00	; 0
 146:	0e 94 32 04 	call	0x864	; 0x864 <__divmodhi4>
			TIME1_PWM_oc1A_duty(speed);
 14a:	82 e3       	ldi	r24, 0x32	; 50
 14c:	86 0f       	add	r24, r22
 14e:	0e 94 d0 02 	call	0x5a0	; 0x5a0 <TIME1_PWM_oc1A_duty>
			SETBIT(PORTA,PINA7);
 152:	8b b3       	in	r24, 0x1b	; 27
 154:	80 68       	ori	r24, 0x80	; 128
 156:	8b bb       	out	0x1b, r24	; 27
 158:	0c c0       	rjmp	.+24     	; 0x172 <main+0xb0>
		}else if(temp >= 50){
 15a:	c2 33       	cpi	r28, 0x32	; 50
 15c:	20 f0       	brcs	.+8      	; 0x166 <main+0xa4>
			TIME1_PWM_oc1A_duty(100);
 15e:	84 e6       	ldi	r24, 0x64	; 100
 160:	0e 94 d0 02 	call	0x5a0	; 0x5a0 <TIME1_PWM_oc1A_duty>
 164:	06 c0       	rjmp	.+12     	; 0x172 <main+0xb0>
		}else{
			CLRBIT(PORTA,PINA7);
 166:	8b b3       	in	r24, 0x1b	; 27
 168:	8f 77       	andi	r24, 0x7F	; 127
 16a:	8b bb       	out	0x1b, r24	; 27
			TIME1_PWM_oc1A_duty(0);
 16c:	80 e0       	ldi	r24, 0x00	; 0
 16e:	0e 94 d0 02 	call	0x5a0	; 0x5a0 <TIME1_PWM_oc1A_duty>
		}
		LCD_write_command(0x01);
 172:	81 e0       	ldi	r24, 0x01	; 1
 174:	0e 94 bd 00 	call	0x17a	; 0x17a <LCD_write_command>
		
		
    }
 178:	af cf       	rjmp	.-162    	; 0xd8 <main+0x16>

0000017a <LCD_write_command>:
		}else{
			(*pos) += 0x40;
		}
	    while (x == SHIFT_DOWN);
	}
}
 17a:	98 b3       	in	r25, 0x18	; 24
 17c:	97 7f       	andi	r25, 0xF7	; 247
 17e:	98 bb       	out	0x18, r25	; 24
 180:	88 23       	and	r24, r24
 182:	24 f4       	brge	.+8      	; 0x18c <LCD_write_command+0x12>
 184:	98 b3       	in	r25, 0x18	; 24
 186:	90 68       	ori	r25, 0x80	; 128
 188:	98 bb       	out	0x18, r25	; 24
 18a:	03 c0       	rjmp	.+6      	; 0x192 <LCD_write_command+0x18>
 18c:	98 b3       	in	r25, 0x18	; 24
 18e:	9f 77       	andi	r25, 0x7F	; 127
 190:	98 bb       	out	0x18, r25	; 24
 192:	86 ff       	sbrs	r24, 6
 194:	04 c0       	rjmp	.+8      	; 0x19e <LCD_write_command+0x24>
 196:	98 b3       	in	r25, 0x18	; 24
 198:	90 64       	ori	r25, 0x40	; 64
 19a:	98 bb       	out	0x18, r25	; 24
 19c:	03 c0       	rjmp	.+6      	; 0x1a4 <LCD_write_command+0x2a>
 19e:	98 b3       	in	r25, 0x18	; 24
 1a0:	9f 7b       	andi	r25, 0xBF	; 191
 1a2:	98 bb       	out	0x18, r25	; 24
 1a4:	85 ff       	sbrs	r24, 5
 1a6:	04 c0       	rjmp	.+8      	; 0x1b0 <LCD_write_command+0x36>
 1a8:	98 b3       	in	r25, 0x18	; 24
 1aa:	90 62       	ori	r25, 0x20	; 32
 1ac:	98 bb       	out	0x18, r25	; 24
 1ae:	03 c0       	rjmp	.+6      	; 0x1b6 <LCD_write_command+0x3c>
 1b0:	98 b3       	in	r25, 0x18	; 24
 1b2:	9f 7d       	andi	r25, 0xDF	; 223
 1b4:	98 bb       	out	0x18, r25	; 24
 1b6:	84 ff       	sbrs	r24, 4
 1b8:	04 c0       	rjmp	.+8      	; 0x1c2 <LCD_write_command+0x48>
 1ba:	98 b3       	in	r25, 0x18	; 24
 1bc:	90 61       	ori	r25, 0x10	; 16
 1be:	98 bb       	out	0x18, r25	; 24
 1c0:	03 c0       	rjmp	.+6      	; 0x1c8 <LCD_write_command+0x4e>
 1c2:	98 b3       	in	r25, 0x18	; 24
 1c4:	9f 7e       	andi	r25, 0xEF	; 239
 1c6:	98 bb       	out	0x18, r25	; 24
 1c8:	98 b3       	in	r25, 0x18	; 24
 1ca:	94 60       	ori	r25, 0x04	; 4
 1cc:	98 bb       	out	0x18, r25	; 24
 1ce:	ef e9       	ldi	r30, 0x9F	; 159
 1d0:	ff e0       	ldi	r31, 0x0F	; 15
 1d2:	31 97       	sbiw	r30, 0x01	; 1
 1d4:	f1 f7       	brne	.-4      	; 0x1d2 <LCD_write_command+0x58>
 1d6:	00 c0       	rjmp	.+0      	; 0x1d8 <LCD_write_command+0x5e>
 1d8:	00 00       	nop
 1da:	98 b3       	in	r25, 0x18	; 24
 1dc:	9b 7f       	andi	r25, 0xFB	; 251
 1de:	98 bb       	out	0x18, r25	; 24
 1e0:	ef e9       	ldi	r30, 0x9F	; 159
 1e2:	ff e0       	ldi	r31, 0x0F	; 15
 1e4:	31 97       	sbiw	r30, 0x01	; 1
 1e6:	f1 f7       	brne	.-4      	; 0x1e4 <LCD_write_command+0x6a>
 1e8:	00 c0       	rjmp	.+0      	; 0x1ea <LCD_write_command+0x70>
 1ea:	00 00       	nop
 1ec:	83 ff       	sbrs	r24, 3
 1ee:	04 c0       	rjmp	.+8      	; 0x1f8 <LCD_write_command+0x7e>
 1f0:	98 b3       	in	r25, 0x18	; 24
 1f2:	90 68       	ori	r25, 0x80	; 128
 1f4:	98 bb       	out	0x18, r25	; 24
 1f6:	03 c0       	rjmp	.+6      	; 0x1fe <LCD_write_command+0x84>
 1f8:	98 b3       	in	r25, 0x18	; 24
 1fa:	9f 77       	andi	r25, 0x7F	; 127
 1fc:	98 bb       	out	0x18, r25	; 24
 1fe:	82 ff       	sbrs	r24, 2
 200:	04 c0       	rjmp	.+8      	; 0x20a <LCD_write_command+0x90>
 202:	98 b3       	in	r25, 0x18	; 24
 204:	90 64       	ori	r25, 0x40	; 64
 206:	98 bb       	out	0x18, r25	; 24
 208:	03 c0       	rjmp	.+6      	; 0x210 <LCD_write_command+0x96>
 20a:	98 b3       	in	r25, 0x18	; 24
 20c:	9f 7b       	andi	r25, 0xBF	; 191
 20e:	98 bb       	out	0x18, r25	; 24
 210:	81 ff       	sbrs	r24, 1
 212:	04 c0       	rjmp	.+8      	; 0x21c <LCD_write_command+0xa2>
 214:	98 b3       	in	r25, 0x18	; 24
 216:	90 62       	ori	r25, 0x20	; 32
 218:	98 bb       	out	0x18, r25	; 24
 21a:	03 c0       	rjmp	.+6      	; 0x222 <LCD_write_command+0xa8>
 21c:	98 b3       	in	r25, 0x18	; 24
 21e:	9f 7d       	andi	r25, 0xDF	; 223
 220:	98 bb       	out	0x18, r25	; 24
 222:	80 ff       	sbrs	r24, 0
 224:	04 c0       	rjmp	.+8      	; 0x22e <LCD_write_command+0xb4>
 226:	88 b3       	in	r24, 0x18	; 24
 228:	80 61       	ori	r24, 0x10	; 16
 22a:	88 bb       	out	0x18, r24	; 24
 22c:	03 c0       	rjmp	.+6      	; 0x234 <LCD_write_command+0xba>
 22e:	88 b3       	in	r24, 0x18	; 24
 230:	8f 7e       	andi	r24, 0xEF	; 239
 232:	88 bb       	out	0x18, r24	; 24
 234:	88 b3       	in	r24, 0x18	; 24
 236:	84 60       	ori	r24, 0x04	; 4
 238:	88 bb       	out	0x18, r24	; 24
 23a:	8f e9       	ldi	r24, 0x9F	; 159
 23c:	9f e0       	ldi	r25, 0x0F	; 15
 23e:	01 97       	sbiw	r24, 0x01	; 1
 240:	f1 f7       	brne	.-4      	; 0x23e <LCD_write_command+0xc4>
 242:	00 c0       	rjmp	.+0      	; 0x244 <LCD_write_command+0xca>
 244:	00 00       	nop
 246:	88 b3       	in	r24, 0x18	; 24
 248:	8b 7f       	andi	r24, 0xFB	; 251
 24a:	88 bb       	out	0x18, r24	; 24
 24c:	ef e9       	ldi	r30, 0x9F	; 159
 24e:	ff e0       	ldi	r31, 0x0F	; 15
 250:	31 97       	sbiw	r30, 0x01	; 1
 252:	f1 f7       	brne	.-4      	; 0x250 <LCD_write_command+0xd6>
 254:	00 c0       	rjmp	.+0      	; 0x256 <LCD_write_command+0xdc>
 256:	00 00       	nop
 258:	08 95       	ret

0000025a <LCD_init>:
 25a:	87 b3       	in	r24, 0x17	; 23
 25c:	8c 6f       	ori	r24, 0xFC	; 252
 25e:	87 bb       	out	0x17, r24	; 23
 260:	83 e0       	ldi	r24, 0x03	; 3
 262:	0e 94 bd 00 	call	0x17a	; 0x17a <LCD_write_command>
 266:	8f e7       	ldi	r24, 0x7F	; 127
 268:	9e e3       	ldi	r25, 0x3E	; 62
 26a:	01 97       	sbiw	r24, 0x01	; 1
 26c:	f1 f7       	brne	.-4      	; 0x26a <LCD_init+0x10>
 26e:	00 c0       	rjmp	.+0      	; 0x270 <LCD_init+0x16>
 270:	00 00       	nop
 272:	83 e0       	ldi	r24, 0x03	; 3
 274:	0e 94 bd 00 	call	0x17a	; 0x17a <LCD_write_command>
 278:	8f e7       	ldi	r24, 0x7F	; 127
 27a:	9e e3       	ldi	r25, 0x3E	; 62
 27c:	01 97       	sbiw	r24, 0x01	; 1
 27e:	f1 f7       	brne	.-4      	; 0x27c <LCD_init+0x22>
 280:	00 c0       	rjmp	.+0      	; 0x282 <LCD_init+0x28>
 282:	00 00       	nop
 284:	83 e0       	ldi	r24, 0x03	; 3
 286:	0e 94 bd 00 	call	0x17a	; 0x17a <LCD_write_command>
 28a:	8f e7       	ldi	r24, 0x7F	; 127
 28c:	9e e3       	ldi	r25, 0x3E	; 62
 28e:	01 97       	sbiw	r24, 0x01	; 1
 290:	f1 f7       	brne	.-4      	; 0x28e <LCD_init+0x34>
 292:	00 c0       	rjmp	.+0      	; 0x294 <LCD_init+0x3a>
 294:	00 00       	nop
 296:	83 e0       	ldi	r24, 0x03	; 3
 298:	0e 94 bd 00 	call	0x17a	; 0x17a <LCD_write_command>
 29c:	8f e7       	ldi	r24, 0x7F	; 127
 29e:	9e e3       	ldi	r25, 0x3E	; 62
 2a0:	01 97       	sbiw	r24, 0x01	; 1
 2a2:	f1 f7       	brne	.-4      	; 0x2a0 <LCD_init+0x46>
 2a4:	00 c0       	rjmp	.+0      	; 0x2a6 <LCD_init+0x4c>
 2a6:	00 00       	nop
 2a8:	82 e0       	ldi	r24, 0x02	; 2
 2aa:	0e 94 bd 00 	call	0x17a	; 0x17a <LCD_write_command>
 2ae:	88 e2       	ldi	r24, 0x28	; 40
 2b0:	0e 94 bd 00 	call	0x17a	; 0x17a <LCD_write_command>
 2b4:	88 e0       	ldi	r24, 0x08	; 8
 2b6:	0e 94 bd 00 	call	0x17a	; 0x17a <LCD_write_command>
 2ba:	81 e0       	ldi	r24, 0x01	; 1
 2bc:	0e 94 bd 00 	call	0x17a	; 0x17a <LCD_write_command>
 2c0:	86 e0       	ldi	r24, 0x06	; 6
 2c2:	0e 94 bd 00 	call	0x17a	; 0x17a <LCD_write_command>
 2c6:	83 e0       	ldi	r24, 0x03	; 3
 2c8:	0e 94 bd 00 	call	0x17a	; 0x17a <LCD_write_command>
 2cc:	8c e0       	ldi	r24, 0x0C	; 12
 2ce:	0e 94 bd 00 	call	0x17a	; 0x17a <LCD_write_command>
 2d2:	9f ef       	ldi	r25, 0xFF	; 255
 2d4:	29 ef       	ldi	r18, 0xF9	; 249
 2d6:	80 e0       	ldi	r24, 0x00	; 0
 2d8:	91 50       	subi	r25, 0x01	; 1
 2da:	20 40       	sbci	r18, 0x00	; 0
 2dc:	80 40       	sbci	r24, 0x00	; 0
 2de:	e1 f7       	brne	.-8      	; 0x2d8 <LCD_init+0x7e>
 2e0:	00 c0       	rjmp	.+0      	; 0x2e2 <LCD_init+0x88>
 2e2:	00 00       	nop
 2e4:	08 95       	ret

000002e6 <LCD_write_data>:
 2e6:	98 b3       	in	r25, 0x18	; 24
 2e8:	98 60       	ori	r25, 0x08	; 8
 2ea:	98 bb       	out	0x18, r25	; 24
 2ec:	88 23       	and	r24, r24
 2ee:	24 f4       	brge	.+8      	; 0x2f8 <LCD_write_data+0x12>
 2f0:	98 b3       	in	r25, 0x18	; 24
 2f2:	90 68       	ori	r25, 0x80	; 128
 2f4:	98 bb       	out	0x18, r25	; 24
 2f6:	03 c0       	rjmp	.+6      	; 0x2fe <LCD_write_data+0x18>
 2f8:	98 b3       	in	r25, 0x18	; 24
 2fa:	9f 77       	andi	r25, 0x7F	; 127
 2fc:	98 bb       	out	0x18, r25	; 24
 2fe:	86 ff       	sbrs	r24, 6
 300:	04 c0       	rjmp	.+8      	; 0x30a <LCD_write_data+0x24>
 302:	98 b3       	in	r25, 0x18	; 24
 304:	90 64       	ori	r25, 0x40	; 64
 306:	98 bb       	out	0x18, r25	; 24
 308:	03 c0       	rjmp	.+6      	; 0x310 <LCD_write_data+0x2a>
 30a:	98 b3       	in	r25, 0x18	; 24
 30c:	9f 7b       	andi	r25, 0xBF	; 191
 30e:	98 bb       	out	0x18, r25	; 24
 310:	85 ff       	sbrs	r24, 5
 312:	04 c0       	rjmp	.+8      	; 0x31c <LCD_write_data+0x36>
 314:	98 b3       	in	r25, 0x18	; 24
 316:	90 62       	ori	r25, 0x20	; 32
 318:	98 bb       	out	0x18, r25	; 24
 31a:	03 c0       	rjmp	.+6      	; 0x322 <LCD_write_data+0x3c>
 31c:	98 b3       	in	r25, 0x18	; 24
 31e:	9f 7d       	andi	r25, 0xDF	; 223
 320:	98 bb       	out	0x18, r25	; 24
 322:	84 ff       	sbrs	r24, 4
 324:	04 c0       	rjmp	.+8      	; 0x32e <LCD_write_data+0x48>
 326:	98 b3       	in	r25, 0x18	; 24
 328:	90 61       	ori	r25, 0x10	; 16
 32a:	98 bb       	out	0x18, r25	; 24
 32c:	03 c0       	rjmp	.+6      	; 0x334 <LCD_write_data+0x4e>
 32e:	98 b3       	in	r25, 0x18	; 24
 330:	9f 7e       	andi	r25, 0xEF	; 239
 332:	98 bb       	out	0x18, r25	; 24
 334:	98 b3       	in	r25, 0x18	; 24
 336:	94 60       	ori	r25, 0x04	; 4
 338:	98 bb       	out	0x18, r25	; 24
 33a:	ef e9       	ldi	r30, 0x9F	; 159
 33c:	ff e0       	ldi	r31, 0x0F	; 15
 33e:	31 97       	sbiw	r30, 0x01	; 1
 340:	f1 f7       	brne	.-4      	; 0x33e <LCD_write_data+0x58>
 342:	00 c0       	rjmp	.+0      	; 0x344 <LCD_write_data+0x5e>
 344:	00 00       	nop
 346:	98 b3       	in	r25, 0x18	; 24
 348:	9b 7f       	andi	r25, 0xFB	; 251
 34a:	98 bb       	out	0x18, r25	; 24
 34c:	ef e9       	ldi	r30, 0x9F	; 159
 34e:	ff e0       	ldi	r31, 0x0F	; 15
 350:	31 97       	sbiw	r30, 0x01	; 1
 352:	f1 f7       	brne	.-4      	; 0x350 <LCD_write_data+0x6a>
 354:	00 c0       	rjmp	.+0      	; 0x356 <LCD_write_data+0x70>
 356:	00 00       	nop
 358:	83 ff       	sbrs	r24, 3
 35a:	04 c0       	rjmp	.+8      	; 0x364 <LCD_write_data+0x7e>
 35c:	98 b3       	in	r25, 0x18	; 24
 35e:	90 68       	ori	r25, 0x80	; 128
 360:	98 bb       	out	0x18, r25	; 24
 362:	03 c0       	rjmp	.+6      	; 0x36a <LCD_write_data+0x84>
 364:	98 b3       	in	r25, 0x18	; 24
 366:	9f 77       	andi	r25, 0x7F	; 127
 368:	98 bb       	out	0x18, r25	; 24
 36a:	82 ff       	sbrs	r24, 2
 36c:	04 c0       	rjmp	.+8      	; 0x376 <LCD_write_data+0x90>
 36e:	98 b3       	in	r25, 0x18	; 24
 370:	90 64       	ori	r25, 0x40	; 64
 372:	98 bb       	out	0x18, r25	; 24
 374:	03 c0       	rjmp	.+6      	; 0x37c <LCD_write_data+0x96>
 376:	98 b3       	in	r25, 0x18	; 24
 378:	9f 7b       	andi	r25, 0xBF	; 191
 37a:	98 bb       	out	0x18, r25	; 24
 37c:	81 ff       	sbrs	r24, 1
 37e:	04 c0       	rjmp	.+8      	; 0x388 <LCD_write_data+0xa2>
 380:	98 b3       	in	r25, 0x18	; 24
 382:	90 62       	ori	r25, 0x20	; 32
 384:	98 bb       	out	0x18, r25	; 24
 386:	03 c0       	rjmp	.+6      	; 0x38e <LCD_write_data+0xa8>
 388:	98 b3       	in	r25, 0x18	; 24
 38a:	9f 7d       	andi	r25, 0xDF	; 223
 38c:	98 bb       	out	0x18, r25	; 24
 38e:	80 ff       	sbrs	r24, 0
 390:	04 c0       	rjmp	.+8      	; 0x39a <LCD_write_data+0xb4>
 392:	88 b3       	in	r24, 0x18	; 24
 394:	80 61       	ori	r24, 0x10	; 16
 396:	88 bb       	out	0x18, r24	; 24
 398:	03 c0       	rjmp	.+6      	; 0x3a0 <LCD_write_data+0xba>
 39a:	88 b3       	in	r24, 0x18	; 24
 39c:	8f 7e       	andi	r24, 0xEF	; 239
 39e:	88 bb       	out	0x18, r24	; 24
 3a0:	88 b3       	in	r24, 0x18	; 24
 3a2:	84 60       	ori	r24, 0x04	; 4
 3a4:	88 bb       	out	0x18, r24	; 24
 3a6:	8f e9       	ldi	r24, 0x9F	; 159
 3a8:	9f e0       	ldi	r25, 0x0F	; 15
 3aa:	01 97       	sbiw	r24, 0x01	; 1
 3ac:	f1 f7       	brne	.-4      	; 0x3aa <LCD_write_data+0xc4>
 3ae:	00 c0       	rjmp	.+0      	; 0x3b0 <LCD_write_data+0xca>
 3b0:	00 00       	nop
 3b2:	88 b3       	in	r24, 0x18	; 24
 3b4:	8b 7f       	andi	r24, 0xFB	; 251
 3b6:	88 bb       	out	0x18, r24	; 24
 3b8:	ef e9       	ldi	r30, 0x9F	; 159
 3ba:	ff e0       	ldi	r31, 0x0F	; 15
 3bc:	31 97       	sbiw	r30, 0x01	; 1
 3be:	f1 f7       	brne	.-4      	; 0x3bc <LCD_write_data+0xd6>
 3c0:	00 c0       	rjmp	.+0      	; 0x3c2 <LCD_write_data+0xdc>
 3c2:	00 00       	nop
 3c4:	08 95       	ret

000003c6 <LCD_write_string>:
 3c6:	0f 93       	push	r16
 3c8:	1f 93       	push	r17
 3ca:	cf 93       	push	r28
 3cc:	8c 01       	movw	r16, r24
 3ce:	c0 e0       	ldi	r28, 0x00	; 0
 3d0:	03 c0       	rjmp	.+6      	; 0x3d8 <LCD_write_string+0x12>
 3d2:	0e 94 73 01 	call	0x2e6	; 0x2e6 <LCD_write_data>
 3d6:	cf 5f       	subi	r28, 0xFF	; 255
 3d8:	f8 01       	movw	r30, r16
 3da:	ec 0f       	add	r30, r28
 3dc:	f1 1d       	adc	r31, r1
 3de:	c7 fd       	sbrc	r28, 7
 3e0:	fa 95       	dec	r31
 3e2:	80 81       	ld	r24, Z
 3e4:	81 11       	cpse	r24, r1
 3e6:	f5 cf       	rjmp	.-22     	; 0x3d2 <LCD_write_string+0xc>
 3e8:	cf 91       	pop	r28
 3ea:	1f 91       	pop	r17
 3ec:	0f 91       	pop	r16
 3ee:	08 95       	ret

000003f0 <LCD_write_num>:
* Purpose      : write number
* Parameters   : num: decimal number 0 -->255
* Return value : void
**************************************************************************/

void LCD_write_num(uint32_t num){
 3f0:	1f 93       	push	r17
 3f2:	cf 93       	push	r28
 3f4:	df 93       	push	r29
 3f6:	cd b7       	in	r28, 0x3d	; 61
 3f8:	de b7       	in	r29, 0x3e	; 62
 3fa:	2a 97       	sbiw	r28, 0x0a	; 10
 3fc:	0f b6       	in	r0, 0x3f	; 63
 3fe:	f8 94       	cli
 400:	de bf       	out	0x3e, r29	; 62
 402:	0f be       	out	0x3f, r0	; 63
 404:	cd bf       	out	0x3d, r28	; 61
	int8_t i = 0;
	uint8_t arr_num[10];
	
	if(num==0){
 406:	61 15       	cp	r22, r1
 408:	71 05       	cpc	r23, r1
 40a:	81 05       	cpc	r24, r1
 40c:	91 05       	cpc	r25, r1
 40e:	d1 f4       	brne	.+52     	; 0x444 <__EEPROM_REGION_LENGTH__+0x44>
		LCD_write_data('0');
 410:	80 e3       	ldi	r24, 0x30	; 48
 412:	0e 94 73 01 	call	0x2e6	; 0x2e6 <LCD_write_data>
 416:	2c c0       	rjmp	.+88     	; 0x470 <__EEPROM_REGION_LENGTH__+0x70>
		return;	// get out of function no return value needed for void functions
	}
	
	for(i = 0 ;num != 0 ; i++){
		arr_num[i] = num % 10 + 48;
 418:	2a e0       	ldi	r18, 0x0A	; 10
 41a:	30 e0       	ldi	r19, 0x00	; 0
 41c:	40 e0       	ldi	r20, 0x00	; 0
 41e:	50 e0       	ldi	r21, 0x00	; 0
 420:	0e 94 46 04 	call	0x88c	; 0x88c <__udivmodsi4>
 424:	e1 e0       	ldi	r30, 0x01	; 1
 426:	f0 e0       	ldi	r31, 0x00	; 0
 428:	ec 0f       	add	r30, r28
 42a:	fd 1f       	adc	r31, r29
 42c:	e1 0f       	add	r30, r17
 42e:	f1 1d       	adc	r31, r1
 430:	17 fd       	sbrc	r17, 7
 432:	fa 95       	dec	r31
 434:	60 5d       	subi	r22, 0xD0	; 208
 436:	60 83       	st	Z, r22
		num /= 10;
 438:	62 2f       	mov	r22, r18
 43a:	73 2f       	mov	r23, r19
 43c:	84 2f       	mov	r24, r20
 43e:	95 2f       	mov	r25, r21
	if(num==0){
		LCD_write_data('0');
		return;	// get out of function no return value needed for void functions
	}
	
	for(i = 0 ;num != 0 ; i++){
 440:	1f 5f       	subi	r17, 0xFF	; 255
 442:	01 c0       	rjmp	.+2      	; 0x446 <__EEPROM_REGION_LENGTH__+0x46>
 444:	10 e0       	ldi	r17, 0x00	; 0
 446:	61 15       	cp	r22, r1
 448:	71 05       	cpc	r23, r1
 44a:	81 05       	cpc	r24, r1
 44c:	91 05       	cpc	r25, r1
 44e:	21 f7       	brne	.-56     	; 0x418 <__EEPROM_REGION_LENGTH__+0x18>
		arr_num[i] = num % 10 + 48;
		num /= 10;
	}
	i--;
 450:	11 50       	subi	r17, 0x01	; 1
	while(i >= 0){
 452:	0c c0       	rjmp	.+24     	; 0x46c <__EEPROM_REGION_LENGTH__+0x6c>
		LCD_write_data(arr_num[i]);
 454:	e1 e0       	ldi	r30, 0x01	; 1
 456:	f0 e0       	ldi	r31, 0x00	; 0
 458:	ec 0f       	add	r30, r28
 45a:	fd 1f       	adc	r31, r29
 45c:	e1 0f       	add	r30, r17
 45e:	f1 1d       	adc	r31, r1
 460:	17 fd       	sbrc	r17, 7
 462:	fa 95       	dec	r31
 464:	80 81       	ld	r24, Z
 466:	0e 94 73 01 	call	0x2e6	; 0x2e6 <LCD_write_data>
		i--;
 46a:	11 50       	subi	r17, 0x01	; 1
	for(i = 0 ;num != 0 ; i++){
		arr_num[i] = num % 10 + 48;
		num /= 10;
	}
	i--;
	while(i >= 0){
 46c:	11 23       	and	r17, r17
 46e:	94 f7       	brge	.-28     	; 0x454 <__EEPROM_REGION_LENGTH__+0x54>
		LCD_write_data(arr_num[i]);
		i--;
	}
}
 470:	2a 96       	adiw	r28, 0x0a	; 10
 472:	0f b6       	in	r0, 0x3f	; 63
 474:	f8 94       	cli
 476:	de bf       	out	0x3e, r29	; 62
 478:	0f be       	out	0x3f, r0	; 63
 47a:	cd bf       	out	0x3d, r28	; 61
 47c:	df 91       	pop	r29
 47e:	cf 91       	pop	r28
 480:	1f 91       	pop	r17
 482:	08 95       	ret

00000484 <SEVEN_SEG_init>:
void SEVEN_SEG_write(uint8_t data){
	EN1(1);
	A(READBIT(data,0));
	B(READBIT(data,1));
	C(READBIT(data,2));
	D(READBIT(data,3));
 484:	84 b3       	in	r24, 0x14	; 20
 486:	8c 6f       	ori	r24, 0xFC	; 252
 488:	84 bb       	out	0x14, r24	; 20
 48a:	08 95       	ret

0000048c <SEVEN_SEG_write_on2>:
* Purpose      : write number in two seven segment can be from 0 to 9
* Parameters   : data = number fro 0 to 9
* Return value :void
**************************************************************************/
void SEVEN_SEG_write_on2(uint8_t data){
	uint8_t x = data % 10;
 48c:	9d ec       	ldi	r25, 0xCD	; 205
 48e:	89 9f       	mul	r24, r25
 490:	91 2d       	mov	r25, r1
 492:	11 24       	eor	r1, r1
 494:	96 95       	lsr	r25
 496:	96 95       	lsr	r25
 498:	96 95       	lsr	r25
 49a:	99 0f       	add	r25, r25
 49c:	29 2f       	mov	r18, r25
 49e:	22 0f       	add	r18, r18
 4a0:	22 0f       	add	r18, r18
 4a2:	92 0f       	add	r25, r18
 4a4:	28 2f       	mov	r18, r24
 4a6:	29 1b       	sub	r18, r25
 4a8:	92 2f       	mov	r25, r18
	EN1(1);
 4aa:	25 b3       	in	r18, 0x15	; 21
 4ac:	24 60       	ori	r18, 0x04	; 4
 4ae:	25 bb       	out	0x15, r18	; 21
	EN2(0);
 4b0:	25 b3       	in	r18, 0x15	; 21
 4b2:	2f 77       	andi	r18, 0x7F	; 127
 4b4:	25 bb       	out	0x15, r18	; 21
	A(READBIT(x,0));
 4b6:	90 ff       	sbrs	r25, 0
 4b8:	04 c0       	rjmp	.+8      	; 0x4c2 <SEVEN_SEG_write_on2+0x36>
 4ba:	25 b3       	in	r18, 0x15	; 21
 4bc:	28 60       	ori	r18, 0x08	; 8
 4be:	25 bb       	out	0x15, r18	; 21
 4c0:	03 c0       	rjmp	.+6      	; 0x4c8 <SEVEN_SEG_write_on2+0x3c>
 4c2:	25 b3       	in	r18, 0x15	; 21
 4c4:	27 7f       	andi	r18, 0xF7	; 247
 4c6:	25 bb       	out	0x15, r18	; 21
	B(READBIT(x,1));
 4c8:	91 ff       	sbrs	r25, 1
 4ca:	04 c0       	rjmp	.+8      	; 0x4d4 <SEVEN_SEG_write_on2+0x48>
 4cc:	25 b3       	in	r18, 0x15	; 21
 4ce:	20 61       	ori	r18, 0x10	; 16
 4d0:	25 bb       	out	0x15, r18	; 21
 4d2:	03 c0       	rjmp	.+6      	; 0x4da <SEVEN_SEG_write_on2+0x4e>
 4d4:	25 b3       	in	r18, 0x15	; 21
 4d6:	2f 7e       	andi	r18, 0xEF	; 239
 4d8:	25 bb       	out	0x15, r18	; 21
	C(READBIT(x,2));
 4da:	92 ff       	sbrs	r25, 2
 4dc:	04 c0       	rjmp	.+8      	; 0x4e6 <SEVEN_SEG_write_on2+0x5a>
 4de:	25 b3       	in	r18, 0x15	; 21
 4e0:	20 62       	ori	r18, 0x20	; 32
 4e2:	25 bb       	out	0x15, r18	; 21
 4e4:	03 c0       	rjmp	.+6      	; 0x4ec <SEVEN_SEG_write_on2+0x60>
 4e6:	25 b3       	in	r18, 0x15	; 21
 4e8:	2f 7d       	andi	r18, 0xDF	; 223
 4ea:	25 bb       	out	0x15, r18	; 21
	D(READBIT(x,3));
 4ec:	93 ff       	sbrs	r25, 3
 4ee:	04 c0       	rjmp	.+8      	; 0x4f8 <SEVEN_SEG_write_on2+0x6c>
 4f0:	95 b3       	in	r25, 0x15	; 21
 4f2:	90 64       	ori	r25, 0x40	; 64
 4f4:	95 bb       	out	0x15, r25	; 21
 4f6:	03 c0       	rjmp	.+6      	; 0x4fe <SEVEN_SEG_write_on2+0x72>
 4f8:	95 b3       	in	r25, 0x15	; 21
 4fa:	9f 7b       	andi	r25, 0xBF	; 191
 4fc:	95 bb       	out	0x15, r25	; 21
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 4fe:	ef e1       	ldi	r30, 0x1F	; 31
 500:	fe e4       	ldi	r31, 0x4E	; 78
 502:	31 97       	sbiw	r30, 0x01	; 1
 504:	f1 f7       	brne	.-4      	; 0x502 <SEVEN_SEG_write_on2+0x76>
 506:	00 c0       	rjmp	.+0      	; 0x508 <SEVEN_SEG_write_on2+0x7c>
 508:	00 00       	nop
	_delay_ms(5);
	
	x = data / 10;
 50a:	9d ec       	ldi	r25, 0xCD	; 205
 50c:	89 9f       	mul	r24, r25
 50e:	81 2d       	mov	r24, r1
 510:	11 24       	eor	r1, r1
 512:	86 95       	lsr	r24
 514:	86 95       	lsr	r24
 516:	86 95       	lsr	r24
	EN1(0);
 518:	95 b3       	in	r25, 0x15	; 21
 51a:	9b 7f       	andi	r25, 0xFB	; 251
 51c:	95 bb       	out	0x15, r25	; 21
	EN2(1);
 51e:	95 b3       	in	r25, 0x15	; 21
 520:	90 68       	ori	r25, 0x80	; 128
 522:	95 bb       	out	0x15, r25	; 21
	A(READBIT(x,0));
 524:	80 ff       	sbrs	r24, 0
 526:	04 c0       	rjmp	.+8      	; 0x530 <SEVEN_SEG_write_on2+0xa4>
 528:	95 b3       	in	r25, 0x15	; 21
 52a:	98 60       	ori	r25, 0x08	; 8
 52c:	95 bb       	out	0x15, r25	; 21
 52e:	03 c0       	rjmp	.+6      	; 0x536 <SEVEN_SEG_write_on2+0xaa>
 530:	95 b3       	in	r25, 0x15	; 21
 532:	97 7f       	andi	r25, 0xF7	; 247
 534:	95 bb       	out	0x15, r25	; 21
	B(READBIT(x,1));
 536:	81 ff       	sbrs	r24, 1
 538:	04 c0       	rjmp	.+8      	; 0x542 <SEVEN_SEG_write_on2+0xb6>
 53a:	95 b3       	in	r25, 0x15	; 21
 53c:	90 61       	ori	r25, 0x10	; 16
 53e:	95 bb       	out	0x15, r25	; 21
 540:	03 c0       	rjmp	.+6      	; 0x548 <SEVEN_SEG_write_on2+0xbc>
 542:	95 b3       	in	r25, 0x15	; 21
 544:	9f 7e       	andi	r25, 0xEF	; 239
 546:	95 bb       	out	0x15, r25	; 21
	C(READBIT(x,2));
 548:	82 ff       	sbrs	r24, 2
 54a:	04 c0       	rjmp	.+8      	; 0x554 <SEVEN_SEG_write_on2+0xc8>
 54c:	95 b3       	in	r25, 0x15	; 21
 54e:	90 62       	ori	r25, 0x20	; 32
 550:	95 bb       	out	0x15, r25	; 21
 552:	03 c0       	rjmp	.+6      	; 0x55a <SEVEN_SEG_write_on2+0xce>
 554:	95 b3       	in	r25, 0x15	; 21
 556:	9f 7d       	andi	r25, 0xDF	; 223
 558:	95 bb       	out	0x15, r25	; 21
	D(READBIT(x,3));
 55a:	83 ff       	sbrs	r24, 3
 55c:	04 c0       	rjmp	.+8      	; 0x566 <SEVEN_SEG_write_on2+0xda>
 55e:	85 b3       	in	r24, 0x15	; 21
 560:	80 64       	ori	r24, 0x40	; 64
 562:	85 bb       	out	0x15, r24	; 21
 564:	03 c0       	rjmp	.+6      	; 0x56c <SEVEN_SEG_write_on2+0xe0>
 566:	85 b3       	in	r24, 0x15	; 21
 568:	8f 7b       	andi	r24, 0xBF	; 191
 56a:	85 bb       	out	0x15, r24	; 21
 56c:	8f e1       	ldi	r24, 0x1F	; 31
 56e:	9e e4       	ldi	r25, 0x4E	; 78
 570:	01 97       	sbiw	r24, 0x01	; 1
 572:	f1 f7       	brne	.-4      	; 0x570 <SEVEN_SEG_write_on2+0xe4>
 574:	00 c0       	rjmp	.+0      	; 0x576 <SEVEN_SEG_write_on2+0xea>
 576:	00 00       	nop
 578:	08 95       	ret

0000057a <TIME1_PWM_oc1A_init>:
	//Configure ICES1 as a rising (positive) edge will trigger the capture
	SETBIT(TCCR1B,ICES1);
	//Enable input capture interrupt
	SETBIT(TIMSK,TICIE1);
	//Enable global interrupt
	SETBIT(SREG,7);
 57a:	81 b3       	in	r24, 0x11	; 17
 57c:	80 62       	ori	r24, 0x20	; 32
 57e:	81 bb       	out	0x11, r24	; 17
 580:	8e b5       	in	r24, 0x2e	; 46
 582:	81 60       	ori	r24, 0x01	; 1
 584:	8e bd       	out	0x2e, r24	; 46
 586:	8f b5       	in	r24, 0x2f	; 47
 588:	80 68       	ori	r24, 0x80	; 128
 58a:	8f bd       	out	0x2f, r24	; 47
 58c:	8e b5       	in	r24, 0x2e	; 46
 58e:	88 60       	ori	r24, 0x08	; 8
 590:	8e bd       	out	0x2e, r24	; 46
 592:	8f b5       	in	r24, 0x2f	; 47
 594:	82 60       	ori	r24, 0x02	; 2
 596:	8f bd       	out	0x2f, r24	; 47
 598:	8f b5       	in	r24, 0x2f	; 47
 59a:	81 60       	ori	r24, 0x01	; 1
 59c:	8f bd       	out	0x2f, r24	; 47
 59e:	08 95       	ret

000005a0 <TIME1_PWM_oc1A_duty>:
 5a0:	68 2f       	mov	r22, r24
 5a2:	70 e0       	ldi	r23, 0x00	; 0
 5a4:	80 e0       	ldi	r24, 0x00	; 0
 5a6:	90 e0       	ldi	r25, 0x00	; 0
 5a8:	0e 94 39 03 	call	0x672	; 0x672 <__floatsisf>
 5ac:	24 e1       	ldi	r18, 0x14	; 20
 5ae:	3e ea       	ldi	r19, 0xAE	; 174
 5b0:	43 e2       	ldi	r20, 0x23	; 35
 5b2:	51 e4       	ldi	r21, 0x41	; 65
 5b4:	0e 94 9d 03 	call	0x73a	; 0x73a <__mulsf3>
 5b8:	0e 94 08 03 	call	0x610	; 0x610 <__fixunssfsi>
 5bc:	7b bd       	out	0x2b, r23	; 43
 5be:	6a bd       	out	0x2a, r22	; 42
 5c0:	08 95       	ret

000005c2 <__vector_6>:
}

ISR(TIMER1_CAPT_vect){
 5c2:	1f 92       	push	r1
 5c4:	0f 92       	push	r0
 5c6:	0f b6       	in	r0, 0x3f	; 63
 5c8:	0f 92       	push	r0
 5ca:	11 24       	eor	r1, r1
 5cc:	2f 93       	push	r18
 5ce:	3f 93       	push	r19
 5d0:	4f 93       	push	r20
 5d2:	5f 93       	push	r21
 5d4:	6f 93       	push	r22
 5d6:	7f 93       	push	r23
 5d8:	8f 93       	push	r24
 5da:	9f 93       	push	r25
 5dc:	af 93       	push	r26
 5de:	bf 93       	push	r27
 5e0:	ef 93       	push	r30
 5e2:	ff 93       	push	r31
	timer1_InCapture_isr();
 5e4:	e0 91 68 00 	lds	r30, 0x0068	; 0x800068 <__data_end>
 5e8:	f0 91 69 00 	lds	r31, 0x0069	; 0x800069 <__data_end+0x1>
 5ec:	09 95       	icall
 5ee:	ff 91       	pop	r31
 5f0:	ef 91       	pop	r30
 5f2:	bf 91       	pop	r27
 5f4:	af 91       	pop	r26
 5f6:	9f 91       	pop	r25
 5f8:	8f 91       	pop	r24
 5fa:	7f 91       	pop	r23
 5fc:	6f 91       	pop	r22
 5fe:	5f 91       	pop	r21
 600:	4f 91       	pop	r20
 602:	3f 91       	pop	r19
 604:	2f 91       	pop	r18
 606:	0f 90       	pop	r0
 608:	0f be       	out	0x3f, r0	; 63
 60a:	0f 90       	pop	r0
 60c:	1f 90       	pop	r1
 60e:	18 95       	reti

00000610 <__fixunssfsi>:
 610:	0e 94 7c 03 	call	0x6f8	; 0x6f8 <__fp_splitA>
 614:	88 f0       	brcs	.+34     	; 0x638 <__fixunssfsi+0x28>
 616:	9f 57       	subi	r25, 0x7F	; 127
 618:	98 f0       	brcs	.+38     	; 0x640 <__fixunssfsi+0x30>
 61a:	b9 2f       	mov	r27, r25
 61c:	99 27       	eor	r25, r25
 61e:	b7 51       	subi	r27, 0x17	; 23
 620:	b0 f0       	brcs	.+44     	; 0x64e <__fixunssfsi+0x3e>
 622:	e1 f0       	breq	.+56     	; 0x65c <__fixunssfsi+0x4c>
 624:	66 0f       	add	r22, r22
 626:	77 1f       	adc	r23, r23
 628:	88 1f       	adc	r24, r24
 62a:	99 1f       	adc	r25, r25
 62c:	1a f0       	brmi	.+6      	; 0x634 <__fixunssfsi+0x24>
 62e:	ba 95       	dec	r27
 630:	c9 f7       	brne	.-14     	; 0x624 <__fixunssfsi+0x14>
 632:	14 c0       	rjmp	.+40     	; 0x65c <__fixunssfsi+0x4c>
 634:	b1 30       	cpi	r27, 0x01	; 1
 636:	91 f0       	breq	.+36     	; 0x65c <__fixunssfsi+0x4c>
 638:	0e 94 96 03 	call	0x72c	; 0x72c <__fp_zero>
 63c:	b1 e0       	ldi	r27, 0x01	; 1
 63e:	08 95       	ret
 640:	0c 94 96 03 	jmp	0x72c	; 0x72c <__fp_zero>
 644:	67 2f       	mov	r22, r23
 646:	78 2f       	mov	r23, r24
 648:	88 27       	eor	r24, r24
 64a:	b8 5f       	subi	r27, 0xF8	; 248
 64c:	39 f0       	breq	.+14     	; 0x65c <__fixunssfsi+0x4c>
 64e:	b9 3f       	cpi	r27, 0xF9	; 249
 650:	cc f3       	brlt	.-14     	; 0x644 <__fixunssfsi+0x34>
 652:	86 95       	lsr	r24
 654:	77 95       	ror	r23
 656:	67 95       	ror	r22
 658:	b3 95       	inc	r27
 65a:	d9 f7       	brne	.-10     	; 0x652 <__fixunssfsi+0x42>
 65c:	3e f4       	brtc	.+14     	; 0x66c <__fixunssfsi+0x5c>
 65e:	90 95       	com	r25
 660:	80 95       	com	r24
 662:	70 95       	com	r23
 664:	61 95       	neg	r22
 666:	7f 4f       	sbci	r23, 0xFF	; 255
 668:	8f 4f       	sbci	r24, 0xFF	; 255
 66a:	9f 4f       	sbci	r25, 0xFF	; 255
 66c:	08 95       	ret

0000066e <__floatunsisf>:
 66e:	e8 94       	clt
 670:	09 c0       	rjmp	.+18     	; 0x684 <__floatsisf+0x12>

00000672 <__floatsisf>:
 672:	97 fb       	bst	r25, 7
 674:	3e f4       	brtc	.+14     	; 0x684 <__floatsisf+0x12>
 676:	90 95       	com	r25
 678:	80 95       	com	r24
 67a:	70 95       	com	r23
 67c:	61 95       	neg	r22
 67e:	7f 4f       	sbci	r23, 0xFF	; 255
 680:	8f 4f       	sbci	r24, 0xFF	; 255
 682:	9f 4f       	sbci	r25, 0xFF	; 255
 684:	99 23       	and	r25, r25
 686:	a9 f0       	breq	.+42     	; 0x6b2 <__floatsisf+0x40>
 688:	f9 2f       	mov	r31, r25
 68a:	96 e9       	ldi	r25, 0x96	; 150
 68c:	bb 27       	eor	r27, r27
 68e:	93 95       	inc	r25
 690:	f6 95       	lsr	r31
 692:	87 95       	ror	r24
 694:	77 95       	ror	r23
 696:	67 95       	ror	r22
 698:	b7 95       	ror	r27
 69a:	f1 11       	cpse	r31, r1
 69c:	f8 cf       	rjmp	.-16     	; 0x68e <__floatsisf+0x1c>
 69e:	fa f4       	brpl	.+62     	; 0x6de <__floatsisf+0x6c>
 6a0:	bb 0f       	add	r27, r27
 6a2:	11 f4       	brne	.+4      	; 0x6a8 <__floatsisf+0x36>
 6a4:	60 ff       	sbrs	r22, 0
 6a6:	1b c0       	rjmp	.+54     	; 0x6de <__floatsisf+0x6c>
 6a8:	6f 5f       	subi	r22, 0xFF	; 255
 6aa:	7f 4f       	sbci	r23, 0xFF	; 255
 6ac:	8f 4f       	sbci	r24, 0xFF	; 255
 6ae:	9f 4f       	sbci	r25, 0xFF	; 255
 6b0:	16 c0       	rjmp	.+44     	; 0x6de <__floatsisf+0x6c>
 6b2:	88 23       	and	r24, r24
 6b4:	11 f0       	breq	.+4      	; 0x6ba <__floatsisf+0x48>
 6b6:	96 e9       	ldi	r25, 0x96	; 150
 6b8:	11 c0       	rjmp	.+34     	; 0x6dc <__floatsisf+0x6a>
 6ba:	77 23       	and	r23, r23
 6bc:	21 f0       	breq	.+8      	; 0x6c6 <__floatsisf+0x54>
 6be:	9e e8       	ldi	r25, 0x8E	; 142
 6c0:	87 2f       	mov	r24, r23
 6c2:	76 2f       	mov	r23, r22
 6c4:	05 c0       	rjmp	.+10     	; 0x6d0 <__floatsisf+0x5e>
 6c6:	66 23       	and	r22, r22
 6c8:	71 f0       	breq	.+28     	; 0x6e6 <__floatsisf+0x74>
 6ca:	96 e8       	ldi	r25, 0x86	; 134
 6cc:	86 2f       	mov	r24, r22
 6ce:	70 e0       	ldi	r23, 0x00	; 0
 6d0:	60 e0       	ldi	r22, 0x00	; 0
 6d2:	2a f0       	brmi	.+10     	; 0x6de <__floatsisf+0x6c>
 6d4:	9a 95       	dec	r25
 6d6:	66 0f       	add	r22, r22
 6d8:	77 1f       	adc	r23, r23
 6da:	88 1f       	adc	r24, r24
 6dc:	da f7       	brpl	.-10     	; 0x6d4 <__floatsisf+0x62>
 6de:	88 0f       	add	r24, r24
 6e0:	96 95       	lsr	r25
 6e2:	87 95       	ror	r24
 6e4:	97 f9       	bld	r25, 7
 6e6:	08 95       	ret

000006e8 <__fp_split3>:
 6e8:	57 fd       	sbrc	r21, 7
 6ea:	90 58       	subi	r25, 0x80	; 128
 6ec:	44 0f       	add	r20, r20
 6ee:	55 1f       	adc	r21, r21
 6f0:	59 f0       	breq	.+22     	; 0x708 <__fp_splitA+0x10>
 6f2:	5f 3f       	cpi	r21, 0xFF	; 255
 6f4:	71 f0       	breq	.+28     	; 0x712 <__fp_splitA+0x1a>
 6f6:	47 95       	ror	r20

000006f8 <__fp_splitA>:
 6f8:	88 0f       	add	r24, r24
 6fa:	97 fb       	bst	r25, 7
 6fc:	99 1f       	adc	r25, r25
 6fe:	61 f0       	breq	.+24     	; 0x718 <__fp_splitA+0x20>
 700:	9f 3f       	cpi	r25, 0xFF	; 255
 702:	79 f0       	breq	.+30     	; 0x722 <__fp_splitA+0x2a>
 704:	87 95       	ror	r24
 706:	08 95       	ret
 708:	12 16       	cp	r1, r18
 70a:	13 06       	cpc	r1, r19
 70c:	14 06       	cpc	r1, r20
 70e:	55 1f       	adc	r21, r21
 710:	f2 cf       	rjmp	.-28     	; 0x6f6 <__fp_split3+0xe>
 712:	46 95       	lsr	r20
 714:	f1 df       	rcall	.-30     	; 0x6f8 <__fp_splitA>
 716:	08 c0       	rjmp	.+16     	; 0x728 <__fp_splitA+0x30>
 718:	16 16       	cp	r1, r22
 71a:	17 06       	cpc	r1, r23
 71c:	18 06       	cpc	r1, r24
 71e:	99 1f       	adc	r25, r25
 720:	f1 cf       	rjmp	.-30     	; 0x704 <__fp_splitA+0xc>
 722:	86 95       	lsr	r24
 724:	71 05       	cpc	r23, r1
 726:	61 05       	cpc	r22, r1
 728:	08 94       	sec
 72a:	08 95       	ret

0000072c <__fp_zero>:
 72c:	e8 94       	clt

0000072e <__fp_szero>:
 72e:	bb 27       	eor	r27, r27
 730:	66 27       	eor	r22, r22
 732:	77 27       	eor	r23, r23
 734:	cb 01       	movw	r24, r22
 736:	97 f9       	bld	r25, 7
 738:	08 95       	ret

0000073a <__mulsf3>:
 73a:	0e 94 b0 03 	call	0x760	; 0x760 <__mulsf3x>
 73e:	0c 94 21 04 	jmp	0x842	; 0x842 <__fp_round>
 742:	0e 94 13 04 	call	0x826	; 0x826 <__fp_pscA>
 746:	38 f0       	brcs	.+14     	; 0x756 <__mulsf3+0x1c>
 748:	0e 94 1a 04 	call	0x834	; 0x834 <__fp_pscB>
 74c:	20 f0       	brcs	.+8      	; 0x756 <__mulsf3+0x1c>
 74e:	95 23       	and	r25, r21
 750:	11 f0       	breq	.+4      	; 0x756 <__mulsf3+0x1c>
 752:	0c 94 0a 04 	jmp	0x814	; 0x814 <__fp_inf>
 756:	0c 94 10 04 	jmp	0x820	; 0x820 <__fp_nan>
 75a:	11 24       	eor	r1, r1
 75c:	0c 94 97 03 	jmp	0x72e	; 0x72e <__fp_szero>

00000760 <__mulsf3x>:
 760:	0e 94 74 03 	call	0x6e8	; 0x6e8 <__fp_split3>
 764:	70 f3       	brcs	.-36     	; 0x742 <__mulsf3+0x8>

00000766 <__mulsf3_pse>:
 766:	95 9f       	mul	r25, r21
 768:	c1 f3       	breq	.-16     	; 0x75a <__mulsf3+0x20>
 76a:	95 0f       	add	r25, r21
 76c:	50 e0       	ldi	r21, 0x00	; 0
 76e:	55 1f       	adc	r21, r21
 770:	62 9f       	mul	r22, r18
 772:	f0 01       	movw	r30, r0
 774:	72 9f       	mul	r23, r18
 776:	bb 27       	eor	r27, r27
 778:	f0 0d       	add	r31, r0
 77a:	b1 1d       	adc	r27, r1
 77c:	63 9f       	mul	r22, r19
 77e:	aa 27       	eor	r26, r26
 780:	f0 0d       	add	r31, r0
 782:	b1 1d       	adc	r27, r1
 784:	aa 1f       	adc	r26, r26
 786:	64 9f       	mul	r22, r20
 788:	66 27       	eor	r22, r22
 78a:	b0 0d       	add	r27, r0
 78c:	a1 1d       	adc	r26, r1
 78e:	66 1f       	adc	r22, r22
 790:	82 9f       	mul	r24, r18
 792:	22 27       	eor	r18, r18
 794:	b0 0d       	add	r27, r0
 796:	a1 1d       	adc	r26, r1
 798:	62 1f       	adc	r22, r18
 79a:	73 9f       	mul	r23, r19
 79c:	b0 0d       	add	r27, r0
 79e:	a1 1d       	adc	r26, r1
 7a0:	62 1f       	adc	r22, r18
 7a2:	83 9f       	mul	r24, r19
 7a4:	a0 0d       	add	r26, r0
 7a6:	61 1d       	adc	r22, r1
 7a8:	22 1f       	adc	r18, r18
 7aa:	74 9f       	mul	r23, r20
 7ac:	33 27       	eor	r19, r19
 7ae:	a0 0d       	add	r26, r0
 7b0:	61 1d       	adc	r22, r1
 7b2:	23 1f       	adc	r18, r19
 7b4:	84 9f       	mul	r24, r20
 7b6:	60 0d       	add	r22, r0
 7b8:	21 1d       	adc	r18, r1
 7ba:	82 2f       	mov	r24, r18
 7bc:	76 2f       	mov	r23, r22
 7be:	6a 2f       	mov	r22, r26
 7c0:	11 24       	eor	r1, r1
 7c2:	9f 57       	subi	r25, 0x7F	; 127
 7c4:	50 40       	sbci	r21, 0x00	; 0
 7c6:	9a f0       	brmi	.+38     	; 0x7ee <__mulsf3_pse+0x88>
 7c8:	f1 f0       	breq	.+60     	; 0x806 <__DATA_REGION_LENGTH__+0x6>
 7ca:	88 23       	and	r24, r24
 7cc:	4a f0       	brmi	.+18     	; 0x7e0 <__mulsf3_pse+0x7a>
 7ce:	ee 0f       	add	r30, r30
 7d0:	ff 1f       	adc	r31, r31
 7d2:	bb 1f       	adc	r27, r27
 7d4:	66 1f       	adc	r22, r22
 7d6:	77 1f       	adc	r23, r23
 7d8:	88 1f       	adc	r24, r24
 7da:	91 50       	subi	r25, 0x01	; 1
 7dc:	50 40       	sbci	r21, 0x00	; 0
 7de:	a9 f7       	brne	.-22     	; 0x7ca <__mulsf3_pse+0x64>
 7e0:	9e 3f       	cpi	r25, 0xFE	; 254
 7e2:	51 05       	cpc	r21, r1
 7e4:	80 f0       	brcs	.+32     	; 0x806 <__DATA_REGION_LENGTH__+0x6>
 7e6:	0c 94 0a 04 	jmp	0x814	; 0x814 <__fp_inf>
 7ea:	0c 94 97 03 	jmp	0x72e	; 0x72e <__fp_szero>
 7ee:	5f 3f       	cpi	r21, 0xFF	; 255
 7f0:	e4 f3       	brlt	.-8      	; 0x7ea <__mulsf3_pse+0x84>
 7f2:	98 3e       	cpi	r25, 0xE8	; 232
 7f4:	d4 f3       	brlt	.-12     	; 0x7ea <__mulsf3_pse+0x84>
 7f6:	86 95       	lsr	r24
 7f8:	77 95       	ror	r23
 7fa:	67 95       	ror	r22
 7fc:	b7 95       	ror	r27
 7fe:	f7 95       	ror	r31
 800:	e7 95       	ror	r30
 802:	9f 5f       	subi	r25, 0xFF	; 255
 804:	c1 f7       	brne	.-16     	; 0x7f6 <__mulsf3_pse+0x90>
 806:	fe 2b       	or	r31, r30
 808:	88 0f       	add	r24, r24
 80a:	91 1d       	adc	r25, r1
 80c:	96 95       	lsr	r25
 80e:	87 95       	ror	r24
 810:	97 f9       	bld	r25, 7
 812:	08 95       	ret

00000814 <__fp_inf>:
 814:	97 f9       	bld	r25, 7
 816:	9f 67       	ori	r25, 0x7F	; 127
 818:	80 e8       	ldi	r24, 0x80	; 128
 81a:	70 e0       	ldi	r23, 0x00	; 0
 81c:	60 e0       	ldi	r22, 0x00	; 0
 81e:	08 95       	ret

00000820 <__fp_nan>:
 820:	9f ef       	ldi	r25, 0xFF	; 255
 822:	80 ec       	ldi	r24, 0xC0	; 192
 824:	08 95       	ret

00000826 <__fp_pscA>:
 826:	00 24       	eor	r0, r0
 828:	0a 94       	dec	r0
 82a:	16 16       	cp	r1, r22
 82c:	17 06       	cpc	r1, r23
 82e:	18 06       	cpc	r1, r24
 830:	09 06       	cpc	r0, r25
 832:	08 95       	ret

00000834 <__fp_pscB>:
 834:	00 24       	eor	r0, r0
 836:	0a 94       	dec	r0
 838:	12 16       	cp	r1, r18
 83a:	13 06       	cpc	r1, r19
 83c:	14 06       	cpc	r1, r20
 83e:	05 06       	cpc	r0, r21
 840:	08 95       	ret

00000842 <__fp_round>:
 842:	09 2e       	mov	r0, r25
 844:	03 94       	inc	r0
 846:	00 0c       	add	r0, r0
 848:	11 f4       	brne	.+4      	; 0x84e <__fp_round+0xc>
 84a:	88 23       	and	r24, r24
 84c:	52 f0       	brmi	.+20     	; 0x862 <__stack+0x3>
 84e:	bb 0f       	add	r27, r27
 850:	40 f4       	brcc	.+16     	; 0x862 <__stack+0x3>
 852:	bf 2b       	or	r27, r31
 854:	11 f4       	brne	.+4      	; 0x85a <__fp_round+0x18>
 856:	60 ff       	sbrs	r22, 0
 858:	04 c0       	rjmp	.+8      	; 0x862 <__stack+0x3>
 85a:	6f 5f       	subi	r22, 0xFF	; 255
 85c:	7f 4f       	sbci	r23, 0xFF	; 255
 85e:	8f 4f       	sbci	r24, 0xFF	; 255
 860:	9f 4f       	sbci	r25, 0xFF	; 255
 862:	08 95       	ret

00000864 <__divmodhi4>:
 864:	97 fb       	bst	r25, 7
 866:	07 2e       	mov	r0, r23
 868:	16 f4       	brtc	.+4      	; 0x86e <__divmodhi4+0xa>
 86a:	00 94       	com	r0
 86c:	07 d0       	rcall	.+14     	; 0x87c <__divmodhi4_neg1>
 86e:	77 fd       	sbrc	r23, 7
 870:	09 d0       	rcall	.+18     	; 0x884 <__divmodhi4_neg2>
 872:	0e 94 77 04 	call	0x8ee	; 0x8ee <__udivmodhi4>
 876:	07 fc       	sbrc	r0, 7
 878:	05 d0       	rcall	.+10     	; 0x884 <__divmodhi4_neg2>
 87a:	3e f4       	brtc	.+14     	; 0x88a <__divmodhi4_exit>

0000087c <__divmodhi4_neg1>:
 87c:	90 95       	com	r25
 87e:	81 95       	neg	r24
 880:	9f 4f       	sbci	r25, 0xFF	; 255
 882:	08 95       	ret

00000884 <__divmodhi4_neg2>:
 884:	70 95       	com	r23
 886:	61 95       	neg	r22
 888:	7f 4f       	sbci	r23, 0xFF	; 255

0000088a <__divmodhi4_exit>:
 88a:	08 95       	ret

0000088c <__udivmodsi4>:
 88c:	a1 e2       	ldi	r26, 0x21	; 33
 88e:	1a 2e       	mov	r1, r26
 890:	aa 1b       	sub	r26, r26
 892:	bb 1b       	sub	r27, r27
 894:	fd 01       	movw	r30, r26
 896:	0d c0       	rjmp	.+26     	; 0x8b2 <__udivmodsi4_ep>

00000898 <__udivmodsi4_loop>:
 898:	aa 1f       	adc	r26, r26
 89a:	bb 1f       	adc	r27, r27
 89c:	ee 1f       	adc	r30, r30
 89e:	ff 1f       	adc	r31, r31
 8a0:	a2 17       	cp	r26, r18
 8a2:	b3 07       	cpc	r27, r19
 8a4:	e4 07       	cpc	r30, r20
 8a6:	f5 07       	cpc	r31, r21
 8a8:	20 f0       	brcs	.+8      	; 0x8b2 <__udivmodsi4_ep>
 8aa:	a2 1b       	sub	r26, r18
 8ac:	b3 0b       	sbc	r27, r19
 8ae:	e4 0b       	sbc	r30, r20
 8b0:	f5 0b       	sbc	r31, r21

000008b2 <__udivmodsi4_ep>:
 8b2:	66 1f       	adc	r22, r22
 8b4:	77 1f       	adc	r23, r23
 8b6:	88 1f       	adc	r24, r24
 8b8:	99 1f       	adc	r25, r25
 8ba:	1a 94       	dec	r1
 8bc:	69 f7       	brne	.-38     	; 0x898 <__udivmodsi4_loop>
 8be:	60 95       	com	r22
 8c0:	70 95       	com	r23
 8c2:	80 95       	com	r24
 8c4:	90 95       	com	r25
 8c6:	9b 01       	movw	r18, r22
 8c8:	ac 01       	movw	r20, r24
 8ca:	bd 01       	movw	r22, r26
 8cc:	cf 01       	movw	r24, r30
 8ce:	08 95       	ret

000008d0 <__umulhisi3>:
 8d0:	a2 9f       	mul	r26, r18
 8d2:	b0 01       	movw	r22, r0
 8d4:	b3 9f       	mul	r27, r19
 8d6:	c0 01       	movw	r24, r0
 8d8:	a3 9f       	mul	r26, r19
 8da:	70 0d       	add	r23, r0
 8dc:	81 1d       	adc	r24, r1
 8de:	11 24       	eor	r1, r1
 8e0:	91 1d       	adc	r25, r1
 8e2:	b2 9f       	mul	r27, r18
 8e4:	70 0d       	add	r23, r0
 8e6:	81 1d       	adc	r24, r1
 8e8:	11 24       	eor	r1, r1
 8ea:	91 1d       	adc	r25, r1
 8ec:	08 95       	ret

000008ee <__udivmodhi4>:
 8ee:	aa 1b       	sub	r26, r26
 8f0:	bb 1b       	sub	r27, r27
 8f2:	51 e1       	ldi	r21, 0x11	; 17
 8f4:	07 c0       	rjmp	.+14     	; 0x904 <__udivmodhi4_ep>

000008f6 <__udivmodhi4_loop>:
 8f6:	aa 1f       	adc	r26, r26
 8f8:	bb 1f       	adc	r27, r27
 8fa:	a6 17       	cp	r26, r22
 8fc:	b7 07       	cpc	r27, r23
 8fe:	10 f0       	brcs	.+4      	; 0x904 <__udivmodhi4_ep>
 900:	a6 1b       	sub	r26, r22
 902:	b7 0b       	sbc	r27, r23

00000904 <__udivmodhi4_ep>:
 904:	88 1f       	adc	r24, r24
 906:	99 1f       	adc	r25, r25
 908:	5a 95       	dec	r21
 90a:	a9 f7       	brne	.-22     	; 0x8f6 <__udivmodhi4_loop>
 90c:	80 95       	com	r24
 90e:	90 95       	com	r25
 910:	bc 01       	movw	r22, r24
 912:	cd 01       	movw	r24, r26
 914:	08 95       	ret

00000916 <_exit>:
 916:	f8 94       	cli

00000918 <__stop_program>:
 918:	ff cf       	rjmp	.-2      	; 0x918 <__stop_program>
