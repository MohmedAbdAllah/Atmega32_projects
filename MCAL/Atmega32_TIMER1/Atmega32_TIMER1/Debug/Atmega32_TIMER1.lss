
Atmega32_TIMER1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000090a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000001e  00800060  0000090a  0000099e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000007  0080007e  0080007e  000009bc  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000009bc  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000009ec  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000e8  00000000  00000000  00000a28  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000f3e  00000000  00000000  00000b10  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000088d  00000000  00000000  00001a4e  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000aba  00000000  00000000  000022db  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000274  00000000  00000000  00002d98  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000050e  00000000  00000000  0000300c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000096c  00000000  00000000  0000351a  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000a8  00000000  00000000  00003e86  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 49 00 	jmp	0x92	; 0x92 <__vector_1>
   8:	0c 94 70 00 	jmp	0xe0	; 0xe0 <__vector_2>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 20 02 	jmp	0x440	; 0x440 <__vector_6>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	ea e0       	ldi	r30, 0x0A	; 10
  68:	f9 e0       	ldi	r31, 0x09	; 9
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	ae 37       	cpi	r26, 0x7E	; 126
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	20 e0       	ldi	r18, 0x00	; 0
  78:	ae e7       	ldi	r26, 0x7E	; 126
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a5 38       	cpi	r26, 0x85	; 133
  82:	b2 07       	cpc	r27, r18
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 6a 02 	call	0x4d4	; 0x4d4 <main>
  8a:	0c 94 83 04 	jmp	0x906	; 0x906 <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <__vector_1>:
  92:	1f 92       	push	r1
  94:	0f 92       	push	r0
  96:	0f b6       	in	r0, 0x3f	; 63
  98:	0f 92       	push	r0
  9a:	11 24       	eor	r1, r1
  9c:	2f 93       	push	r18
  9e:	3f 93       	push	r19
  a0:	4f 93       	push	r20
  a2:	5f 93       	push	r21
  a4:	6f 93       	push	r22
  a6:	7f 93       	push	r23
  a8:	8f 93       	push	r24
  aa:	9f 93       	push	r25
  ac:	af 93       	push	r26
  ae:	bf 93       	push	r27
  b0:	ef 93       	push	r30
  b2:	ff 93       	push	r31
  b4:	e0 91 83 00 	lds	r30, 0x0083	; 0x800083 <INT0_vect_isr>
  b8:	f0 91 84 00 	lds	r31, 0x0084	; 0x800084 <INT0_vect_isr+0x1>
  bc:	09 95       	icall
  be:	ff 91       	pop	r31
  c0:	ef 91       	pop	r30
  c2:	bf 91       	pop	r27
  c4:	af 91       	pop	r26
  c6:	9f 91       	pop	r25
  c8:	8f 91       	pop	r24
  ca:	7f 91       	pop	r23
  cc:	6f 91       	pop	r22
  ce:	5f 91       	pop	r21
  d0:	4f 91       	pop	r20
  d2:	3f 91       	pop	r19
  d4:	2f 91       	pop	r18
  d6:	0f 90       	pop	r0
  d8:	0f be       	out	0x3f, r0	; 63
  da:	0f 90       	pop	r0
  dc:	1f 90       	pop	r1
  de:	18 95       	reti

000000e0 <__vector_2>:
  e0:	1f 92       	push	r1
  e2:	0f 92       	push	r0
  e4:	0f b6       	in	r0, 0x3f	; 63
  e6:	0f 92       	push	r0
  e8:	11 24       	eor	r1, r1
  ea:	2f 93       	push	r18
  ec:	3f 93       	push	r19
  ee:	4f 93       	push	r20
  f0:	5f 93       	push	r21
  f2:	6f 93       	push	r22
  f4:	7f 93       	push	r23
  f6:	8f 93       	push	r24
  f8:	9f 93       	push	r25
  fa:	af 93       	push	r26
  fc:	bf 93       	push	r27
  fe:	ef 93       	push	r30
 100:	ff 93       	push	r31
 102:	e0 91 81 00 	lds	r30, 0x0081	; 0x800081 <INT1_vect_isr>
 106:	f0 91 82 00 	lds	r31, 0x0082	; 0x800082 <INT1_vect_isr+0x1>
 10a:	09 95       	icall
 10c:	ff 91       	pop	r31
 10e:	ef 91       	pop	r30
 110:	bf 91       	pop	r27
 112:	af 91       	pop	r26
 114:	9f 91       	pop	r25
 116:	8f 91       	pop	r24
 118:	7f 91       	pop	r23
 11a:	6f 91       	pop	r22
 11c:	5f 91       	pop	r21
 11e:	4f 91       	pop	r20
 120:	3f 91       	pop	r19
 122:	2f 91       	pop	r18
 124:	0f 90       	pop	r0
 126:	0f be       	out	0x3f, r0	; 63
 128:	0f 90       	pop	r0
 12a:	1f 90       	pop	r1
 12c:	18 95       	reti

0000012e <LCD_write_command>:
 12e:	98 b3       	in	r25, 0x18	; 24
 130:	97 7f       	andi	r25, 0xF7	; 247
 132:	98 bb       	out	0x18, r25	; 24
 134:	88 23       	and	r24, r24
 136:	24 f4       	brge	.+8      	; 0x140 <LCD_write_command+0x12>
 138:	98 b3       	in	r25, 0x18	; 24
 13a:	90 68       	ori	r25, 0x80	; 128
 13c:	98 bb       	out	0x18, r25	; 24
 13e:	03 c0       	rjmp	.+6      	; 0x146 <LCD_write_command+0x18>
 140:	98 b3       	in	r25, 0x18	; 24
 142:	9f 77       	andi	r25, 0x7F	; 127
 144:	98 bb       	out	0x18, r25	; 24
 146:	86 ff       	sbrs	r24, 6
 148:	04 c0       	rjmp	.+8      	; 0x152 <LCD_write_command+0x24>
 14a:	98 b3       	in	r25, 0x18	; 24
 14c:	90 64       	ori	r25, 0x40	; 64
 14e:	98 bb       	out	0x18, r25	; 24
 150:	03 c0       	rjmp	.+6      	; 0x158 <LCD_write_command+0x2a>
 152:	98 b3       	in	r25, 0x18	; 24
 154:	9f 7b       	andi	r25, 0xBF	; 191
 156:	98 bb       	out	0x18, r25	; 24
 158:	85 ff       	sbrs	r24, 5
 15a:	04 c0       	rjmp	.+8      	; 0x164 <LCD_write_command+0x36>
 15c:	98 b3       	in	r25, 0x18	; 24
 15e:	90 62       	ori	r25, 0x20	; 32
 160:	98 bb       	out	0x18, r25	; 24
 162:	03 c0       	rjmp	.+6      	; 0x16a <LCD_write_command+0x3c>
 164:	98 b3       	in	r25, 0x18	; 24
 166:	9f 7d       	andi	r25, 0xDF	; 223
 168:	98 bb       	out	0x18, r25	; 24
 16a:	84 ff       	sbrs	r24, 4
 16c:	04 c0       	rjmp	.+8      	; 0x176 <LCD_write_command+0x48>
 16e:	98 b3       	in	r25, 0x18	; 24
 170:	90 61       	ori	r25, 0x10	; 16
 172:	98 bb       	out	0x18, r25	; 24
 174:	03 c0       	rjmp	.+6      	; 0x17c <LCD_write_command+0x4e>
 176:	98 b3       	in	r25, 0x18	; 24
 178:	9f 7e       	andi	r25, 0xEF	; 239
 17a:	98 bb       	out	0x18, r25	; 24
 17c:	98 b3       	in	r25, 0x18	; 24
 17e:	94 60       	ori	r25, 0x04	; 4
 180:	98 bb       	out	0x18, r25	; 24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 182:	ef e9       	ldi	r30, 0x9F	; 159
 184:	ff e0       	ldi	r31, 0x0F	; 15
 186:	31 97       	sbiw	r30, 0x01	; 1
 188:	f1 f7       	brne	.-4      	; 0x186 <LCD_write_command+0x58>
 18a:	00 c0       	rjmp	.+0      	; 0x18c <LCD_write_command+0x5e>
 18c:	00 00       	nop
 18e:	98 b3       	in	r25, 0x18	; 24
 190:	9b 7f       	andi	r25, 0xFB	; 251
 192:	98 bb       	out	0x18, r25	; 24
 194:	ef e9       	ldi	r30, 0x9F	; 159
 196:	ff e0       	ldi	r31, 0x0F	; 15
 198:	31 97       	sbiw	r30, 0x01	; 1
 19a:	f1 f7       	brne	.-4      	; 0x198 <LCD_write_command+0x6a>
 19c:	00 c0       	rjmp	.+0      	; 0x19e <LCD_write_command+0x70>
 19e:	00 00       	nop
 1a0:	83 ff       	sbrs	r24, 3
 1a2:	04 c0       	rjmp	.+8      	; 0x1ac <LCD_write_command+0x7e>
 1a4:	98 b3       	in	r25, 0x18	; 24
 1a6:	90 68       	ori	r25, 0x80	; 128
 1a8:	98 bb       	out	0x18, r25	; 24
 1aa:	03 c0       	rjmp	.+6      	; 0x1b2 <LCD_write_command+0x84>
 1ac:	98 b3       	in	r25, 0x18	; 24
 1ae:	9f 77       	andi	r25, 0x7F	; 127
 1b0:	98 bb       	out	0x18, r25	; 24
 1b2:	82 ff       	sbrs	r24, 2
 1b4:	04 c0       	rjmp	.+8      	; 0x1be <LCD_write_command+0x90>
 1b6:	98 b3       	in	r25, 0x18	; 24
 1b8:	90 64       	ori	r25, 0x40	; 64
 1ba:	98 bb       	out	0x18, r25	; 24
 1bc:	03 c0       	rjmp	.+6      	; 0x1c4 <LCD_write_command+0x96>
 1be:	98 b3       	in	r25, 0x18	; 24
 1c0:	9f 7b       	andi	r25, 0xBF	; 191
 1c2:	98 bb       	out	0x18, r25	; 24
 1c4:	81 ff       	sbrs	r24, 1
 1c6:	04 c0       	rjmp	.+8      	; 0x1d0 <LCD_write_command+0xa2>
 1c8:	98 b3       	in	r25, 0x18	; 24
 1ca:	90 62       	ori	r25, 0x20	; 32
 1cc:	98 bb       	out	0x18, r25	; 24
 1ce:	03 c0       	rjmp	.+6      	; 0x1d6 <LCD_write_command+0xa8>
 1d0:	98 b3       	in	r25, 0x18	; 24
 1d2:	9f 7d       	andi	r25, 0xDF	; 223
 1d4:	98 bb       	out	0x18, r25	; 24
 1d6:	80 ff       	sbrs	r24, 0
 1d8:	04 c0       	rjmp	.+8      	; 0x1e2 <LCD_write_command+0xb4>
 1da:	88 b3       	in	r24, 0x18	; 24
 1dc:	80 61       	ori	r24, 0x10	; 16
 1de:	88 bb       	out	0x18, r24	; 24
 1e0:	03 c0       	rjmp	.+6      	; 0x1e8 <LCD_write_command+0xba>
 1e2:	88 b3       	in	r24, 0x18	; 24
 1e4:	8f 7e       	andi	r24, 0xEF	; 239
 1e6:	88 bb       	out	0x18, r24	; 24
 1e8:	88 b3       	in	r24, 0x18	; 24
 1ea:	84 60       	ori	r24, 0x04	; 4
 1ec:	88 bb       	out	0x18, r24	; 24
 1ee:	8f e9       	ldi	r24, 0x9F	; 159
 1f0:	9f e0       	ldi	r25, 0x0F	; 15
 1f2:	01 97       	sbiw	r24, 0x01	; 1
 1f4:	f1 f7       	brne	.-4      	; 0x1f2 <LCD_write_command+0xc4>
 1f6:	00 c0       	rjmp	.+0      	; 0x1f8 <LCD_write_command+0xca>
 1f8:	00 00       	nop
 1fa:	88 b3       	in	r24, 0x18	; 24
 1fc:	8b 7f       	andi	r24, 0xFB	; 251
 1fe:	88 bb       	out	0x18, r24	; 24
 200:	ef e9       	ldi	r30, 0x9F	; 159
 202:	ff e0       	ldi	r31, 0x0F	; 15
 204:	31 97       	sbiw	r30, 0x01	; 1
 206:	f1 f7       	brne	.-4      	; 0x204 <LCD_write_command+0xd6>
 208:	00 c0       	rjmp	.+0      	; 0x20a <LCD_write_command+0xdc>
 20a:	00 00       	nop
 20c:	08 95       	ret

0000020e <LCD_init>:
 20e:	87 b3       	in	r24, 0x17	; 23
 210:	8c 6f       	ori	r24, 0xFC	; 252
 212:	87 bb       	out	0x17, r24	; 23
 214:	83 e0       	ldi	r24, 0x03	; 3
 216:	0e 94 97 00 	call	0x12e	; 0x12e <LCD_write_command>
 21a:	8f e7       	ldi	r24, 0x7F	; 127
 21c:	9e e3       	ldi	r25, 0x3E	; 62
 21e:	01 97       	sbiw	r24, 0x01	; 1
 220:	f1 f7       	brne	.-4      	; 0x21e <LCD_init+0x10>
 222:	00 c0       	rjmp	.+0      	; 0x224 <LCD_init+0x16>
 224:	00 00       	nop
 226:	83 e0       	ldi	r24, 0x03	; 3
 228:	0e 94 97 00 	call	0x12e	; 0x12e <LCD_write_command>
 22c:	8f e7       	ldi	r24, 0x7F	; 127
 22e:	9e e3       	ldi	r25, 0x3E	; 62
 230:	01 97       	sbiw	r24, 0x01	; 1
 232:	f1 f7       	brne	.-4      	; 0x230 <LCD_init+0x22>
 234:	00 c0       	rjmp	.+0      	; 0x236 <LCD_init+0x28>
 236:	00 00       	nop
 238:	83 e0       	ldi	r24, 0x03	; 3
 23a:	0e 94 97 00 	call	0x12e	; 0x12e <LCD_write_command>
 23e:	8f e7       	ldi	r24, 0x7F	; 127
 240:	9e e3       	ldi	r25, 0x3E	; 62
 242:	01 97       	sbiw	r24, 0x01	; 1
 244:	f1 f7       	brne	.-4      	; 0x242 <LCD_init+0x34>
 246:	00 c0       	rjmp	.+0      	; 0x248 <LCD_init+0x3a>
 248:	00 00       	nop
 24a:	83 e0       	ldi	r24, 0x03	; 3
 24c:	0e 94 97 00 	call	0x12e	; 0x12e <LCD_write_command>
 250:	8f e7       	ldi	r24, 0x7F	; 127
 252:	9e e3       	ldi	r25, 0x3E	; 62
 254:	01 97       	sbiw	r24, 0x01	; 1
 256:	f1 f7       	brne	.-4      	; 0x254 <LCD_init+0x46>
 258:	00 c0       	rjmp	.+0      	; 0x25a <LCD_init+0x4c>
 25a:	00 00       	nop
 25c:	82 e0       	ldi	r24, 0x02	; 2
 25e:	0e 94 97 00 	call	0x12e	; 0x12e <LCD_write_command>
 262:	88 e2       	ldi	r24, 0x28	; 40
 264:	0e 94 97 00 	call	0x12e	; 0x12e <LCD_write_command>
 268:	88 e0       	ldi	r24, 0x08	; 8
 26a:	0e 94 97 00 	call	0x12e	; 0x12e <LCD_write_command>
 26e:	81 e0       	ldi	r24, 0x01	; 1
 270:	0e 94 97 00 	call	0x12e	; 0x12e <LCD_write_command>
 274:	86 e0       	ldi	r24, 0x06	; 6
 276:	0e 94 97 00 	call	0x12e	; 0x12e <LCD_write_command>
 27a:	83 e0       	ldi	r24, 0x03	; 3
 27c:	0e 94 97 00 	call	0x12e	; 0x12e <LCD_write_command>
 280:	8c e0       	ldi	r24, 0x0C	; 12
 282:	0e 94 97 00 	call	0x12e	; 0x12e <LCD_write_command>
 286:	9f ef       	ldi	r25, 0xFF	; 255
 288:	29 ef       	ldi	r18, 0xF9	; 249
 28a:	80 e0       	ldi	r24, 0x00	; 0
 28c:	91 50       	subi	r25, 0x01	; 1
 28e:	20 40       	sbci	r18, 0x00	; 0
 290:	80 40       	sbci	r24, 0x00	; 0
 292:	e1 f7       	brne	.-8      	; 0x28c <LCD_init+0x7e>
 294:	00 c0       	rjmp	.+0      	; 0x296 <LCD_init+0x88>
 296:	00 00       	nop
 298:	08 95       	ret

0000029a <LCD_write_data>:
 29a:	98 b3       	in	r25, 0x18	; 24
 29c:	98 60       	ori	r25, 0x08	; 8
 29e:	98 bb       	out	0x18, r25	; 24
 2a0:	88 23       	and	r24, r24
 2a2:	24 f4       	brge	.+8      	; 0x2ac <LCD_write_data+0x12>
 2a4:	98 b3       	in	r25, 0x18	; 24
 2a6:	90 68       	ori	r25, 0x80	; 128
 2a8:	98 bb       	out	0x18, r25	; 24
 2aa:	03 c0       	rjmp	.+6      	; 0x2b2 <LCD_write_data+0x18>
 2ac:	98 b3       	in	r25, 0x18	; 24
 2ae:	9f 77       	andi	r25, 0x7F	; 127
 2b0:	98 bb       	out	0x18, r25	; 24
 2b2:	86 ff       	sbrs	r24, 6
 2b4:	04 c0       	rjmp	.+8      	; 0x2be <LCD_write_data+0x24>
 2b6:	98 b3       	in	r25, 0x18	; 24
 2b8:	90 64       	ori	r25, 0x40	; 64
 2ba:	98 bb       	out	0x18, r25	; 24
 2bc:	03 c0       	rjmp	.+6      	; 0x2c4 <LCD_write_data+0x2a>
 2be:	98 b3       	in	r25, 0x18	; 24
 2c0:	9f 7b       	andi	r25, 0xBF	; 191
 2c2:	98 bb       	out	0x18, r25	; 24
 2c4:	85 ff       	sbrs	r24, 5
 2c6:	04 c0       	rjmp	.+8      	; 0x2d0 <LCD_write_data+0x36>
 2c8:	98 b3       	in	r25, 0x18	; 24
 2ca:	90 62       	ori	r25, 0x20	; 32
 2cc:	98 bb       	out	0x18, r25	; 24
 2ce:	03 c0       	rjmp	.+6      	; 0x2d6 <LCD_write_data+0x3c>
 2d0:	98 b3       	in	r25, 0x18	; 24
 2d2:	9f 7d       	andi	r25, 0xDF	; 223
 2d4:	98 bb       	out	0x18, r25	; 24
 2d6:	84 ff       	sbrs	r24, 4
 2d8:	04 c0       	rjmp	.+8      	; 0x2e2 <LCD_write_data+0x48>
 2da:	98 b3       	in	r25, 0x18	; 24
 2dc:	90 61       	ori	r25, 0x10	; 16
 2de:	98 bb       	out	0x18, r25	; 24
 2e0:	03 c0       	rjmp	.+6      	; 0x2e8 <LCD_write_data+0x4e>
 2e2:	98 b3       	in	r25, 0x18	; 24
 2e4:	9f 7e       	andi	r25, 0xEF	; 239
 2e6:	98 bb       	out	0x18, r25	; 24
 2e8:	98 b3       	in	r25, 0x18	; 24
 2ea:	94 60       	ori	r25, 0x04	; 4
 2ec:	98 bb       	out	0x18, r25	; 24
 2ee:	ef e9       	ldi	r30, 0x9F	; 159
 2f0:	ff e0       	ldi	r31, 0x0F	; 15
 2f2:	31 97       	sbiw	r30, 0x01	; 1
 2f4:	f1 f7       	brne	.-4      	; 0x2f2 <LCD_write_data+0x58>
 2f6:	00 c0       	rjmp	.+0      	; 0x2f8 <LCD_write_data+0x5e>
 2f8:	00 00       	nop
 2fa:	98 b3       	in	r25, 0x18	; 24
 2fc:	9b 7f       	andi	r25, 0xFB	; 251
 2fe:	98 bb       	out	0x18, r25	; 24
 300:	ef e9       	ldi	r30, 0x9F	; 159
 302:	ff e0       	ldi	r31, 0x0F	; 15
 304:	31 97       	sbiw	r30, 0x01	; 1
 306:	f1 f7       	brne	.-4      	; 0x304 <LCD_write_data+0x6a>
 308:	00 c0       	rjmp	.+0      	; 0x30a <LCD_write_data+0x70>
 30a:	00 00       	nop
 30c:	83 ff       	sbrs	r24, 3
 30e:	04 c0       	rjmp	.+8      	; 0x318 <LCD_write_data+0x7e>
 310:	98 b3       	in	r25, 0x18	; 24
 312:	90 68       	ori	r25, 0x80	; 128
 314:	98 bb       	out	0x18, r25	; 24
 316:	03 c0       	rjmp	.+6      	; 0x31e <LCD_write_data+0x84>
 318:	98 b3       	in	r25, 0x18	; 24
 31a:	9f 77       	andi	r25, 0x7F	; 127
 31c:	98 bb       	out	0x18, r25	; 24
 31e:	82 ff       	sbrs	r24, 2
 320:	04 c0       	rjmp	.+8      	; 0x32a <LCD_write_data+0x90>
 322:	98 b3       	in	r25, 0x18	; 24
 324:	90 64       	ori	r25, 0x40	; 64
 326:	98 bb       	out	0x18, r25	; 24
 328:	03 c0       	rjmp	.+6      	; 0x330 <LCD_write_data+0x96>
 32a:	98 b3       	in	r25, 0x18	; 24
 32c:	9f 7b       	andi	r25, 0xBF	; 191
 32e:	98 bb       	out	0x18, r25	; 24
 330:	81 ff       	sbrs	r24, 1
 332:	04 c0       	rjmp	.+8      	; 0x33c <LCD_write_data+0xa2>
 334:	98 b3       	in	r25, 0x18	; 24
 336:	90 62       	ori	r25, 0x20	; 32
 338:	98 bb       	out	0x18, r25	; 24
 33a:	03 c0       	rjmp	.+6      	; 0x342 <LCD_write_data+0xa8>
 33c:	98 b3       	in	r25, 0x18	; 24
 33e:	9f 7d       	andi	r25, 0xDF	; 223
 340:	98 bb       	out	0x18, r25	; 24
 342:	80 ff       	sbrs	r24, 0
 344:	04 c0       	rjmp	.+8      	; 0x34e <LCD_write_data+0xb4>
 346:	88 b3       	in	r24, 0x18	; 24
 348:	80 61       	ori	r24, 0x10	; 16
 34a:	88 bb       	out	0x18, r24	; 24
 34c:	03 c0       	rjmp	.+6      	; 0x354 <LCD_write_data+0xba>
 34e:	88 b3       	in	r24, 0x18	; 24
 350:	8f 7e       	andi	r24, 0xEF	; 239
 352:	88 bb       	out	0x18, r24	; 24
 354:	88 b3       	in	r24, 0x18	; 24
 356:	84 60       	ori	r24, 0x04	; 4
 358:	88 bb       	out	0x18, r24	; 24
 35a:	8f e9       	ldi	r24, 0x9F	; 159
 35c:	9f e0       	ldi	r25, 0x0F	; 15
 35e:	01 97       	sbiw	r24, 0x01	; 1
 360:	f1 f7       	brne	.-4      	; 0x35e <LCD_write_data+0xc4>
 362:	00 c0       	rjmp	.+0      	; 0x364 <LCD_write_data+0xca>
 364:	00 00       	nop
 366:	88 b3       	in	r24, 0x18	; 24
 368:	8b 7f       	andi	r24, 0xFB	; 251
 36a:	88 bb       	out	0x18, r24	; 24
 36c:	ef e9       	ldi	r30, 0x9F	; 159
 36e:	ff e0       	ldi	r31, 0x0F	; 15
 370:	31 97       	sbiw	r30, 0x01	; 1
 372:	f1 f7       	brne	.-4      	; 0x370 <LCD_write_data+0xd6>
 374:	00 c0       	rjmp	.+0      	; 0x376 <LCD_write_data+0xdc>
 376:	00 00       	nop
 378:	08 95       	ret

0000037a <LCD_write_string>:
 37a:	0f 93       	push	r16
 37c:	1f 93       	push	r17
 37e:	cf 93       	push	r28
 380:	8c 01       	movw	r16, r24
 382:	c0 e0       	ldi	r28, 0x00	; 0
 384:	03 c0       	rjmp	.+6      	; 0x38c <LCD_write_string+0x12>
 386:	0e 94 4d 01 	call	0x29a	; 0x29a <LCD_write_data>
 38a:	cf 5f       	subi	r28, 0xFF	; 255
 38c:	f8 01       	movw	r30, r16
 38e:	ec 0f       	add	r30, r28
 390:	f1 1d       	adc	r31, r1
 392:	c7 fd       	sbrc	r28, 7
 394:	fa 95       	dec	r31
 396:	80 81       	ld	r24, Z
 398:	81 11       	cpse	r24, r1
 39a:	f5 cf       	rjmp	.-22     	; 0x386 <LCD_write_string+0xc>
 39c:	cf 91       	pop	r28
 39e:	1f 91       	pop	r17
 3a0:	0f 91       	pop	r16
 3a2:	08 95       	ret

000003a4 <LCD_write_num>:
 3a4:	1f 93       	push	r17
 3a6:	cf 93       	push	r28
 3a8:	df 93       	push	r29
 3aa:	cd b7       	in	r28, 0x3d	; 61
 3ac:	de b7       	in	r29, 0x3e	; 62
 3ae:	2a 97       	sbiw	r28, 0x0a	; 10
 3b0:	0f b6       	in	r0, 0x3f	; 63
 3b2:	f8 94       	cli
 3b4:	de bf       	out	0x3e, r29	; 62
 3b6:	0f be       	out	0x3f, r0	; 63
 3b8:	cd bf       	out	0x3d, r28	; 61
 3ba:	10 e0       	ldi	r17, 0x00	; 0
 3bc:	15 c0       	rjmp	.+42     	; 0x3e8 <LCD_write_num+0x44>
 3be:	2a e0       	ldi	r18, 0x0A	; 10
 3c0:	30 e0       	ldi	r19, 0x00	; 0
 3c2:	40 e0       	ldi	r20, 0x00	; 0
 3c4:	50 e0       	ldi	r21, 0x00	; 0
 3c6:	0e 94 61 04 	call	0x8c2	; 0x8c2 <__udivmodsi4>
 3ca:	e1 e0       	ldi	r30, 0x01	; 1
 3cc:	f0 e0       	ldi	r31, 0x00	; 0
 3ce:	ec 0f       	add	r30, r28
 3d0:	fd 1f       	adc	r31, r29
 3d2:	e1 0f       	add	r30, r17
 3d4:	f1 1d       	adc	r31, r1
 3d6:	17 fd       	sbrc	r17, 7
 3d8:	fa 95       	dec	r31
 3da:	60 5d       	subi	r22, 0xD0	; 208
 3dc:	60 83       	st	Z, r22
 3de:	62 2f       	mov	r22, r18
 3e0:	73 2f       	mov	r23, r19
 3e2:	84 2f       	mov	r24, r20
 3e4:	95 2f       	mov	r25, r21
 3e6:	1f 5f       	subi	r17, 0xFF	; 255
 3e8:	61 15       	cp	r22, r1
 3ea:	71 05       	cpc	r23, r1
 3ec:	81 05       	cpc	r24, r1
 3ee:	91 05       	cpc	r25, r1
 3f0:	31 f7       	brne	.-52     	; 0x3be <LCD_write_num+0x1a>
 3f2:	11 50       	subi	r17, 0x01	; 1
 3f4:	0c c0       	rjmp	.+24     	; 0x40e <__EEPROM_REGION_LENGTH__+0xe>
 3f6:	e1 e0       	ldi	r30, 0x01	; 1
 3f8:	f0 e0       	ldi	r31, 0x00	; 0
 3fa:	ec 0f       	add	r30, r28
 3fc:	fd 1f       	adc	r31, r29
 3fe:	e1 0f       	add	r30, r17
 400:	f1 1d       	adc	r31, r1
 402:	17 fd       	sbrc	r17, 7
 404:	fa 95       	dec	r31
 406:	80 81       	ld	r24, Z
 408:	0e 94 4d 01 	call	0x29a	; 0x29a <LCD_write_data>
 40c:	11 50       	subi	r17, 0x01	; 1
 40e:	11 23       	and	r17, r17
 410:	94 f7       	brge	.-28     	; 0x3f6 <LCD_write_num+0x52>
 412:	2a 96       	adiw	r28, 0x0a	; 10
 414:	0f b6       	in	r0, 0x3f	; 63
 416:	f8 94       	cli
 418:	de bf       	out	0x3e, r29	; 62
 41a:	0f be       	out	0x3f, r0	; 63
 41c:	cd bf       	out	0x3d, r28	; 61
 41e:	df 91       	pop	r29
 420:	cf 91       	pop	r28
 422:	1f 91       	pop	r17
 424:	08 95       	ret

00000426 <TIME1_InCapture_init>:
* Return value : void
**************************************************************************/
void TIME1_InCapture_init(void){

	//configure as no prescaling
	SETBIT(TCCR1B,CS10);
 426:	8e b5       	in	r24, 0x2e	; 46
 428:	81 60       	ori	r24, 0x01	; 1
 42a:	8e bd       	out	0x2e, r24	; 46
	
	//Configure ICES1 as a rising (positive) edge will trigger the capture
	SETBIT(TCCR1B,ICES1);
 42c:	8e b5       	in	r24, 0x2e	; 46
 42e:	80 64       	ori	r24, 0x40	; 64
 430:	8e bd       	out	0x2e, r24	; 46
	//Enable input capture interrupt
	SETBIT(TIMSK,TICIE1);
 432:	89 b7       	in	r24, 0x39	; 57
 434:	80 62       	ori	r24, 0x20	; 32
 436:	89 bf       	out	0x39, r24	; 57
	//Enable global interrupt
	SETBIT(SREG,7);
 438:	8f b7       	in	r24, 0x3f	; 63
 43a:	80 68       	ori	r24, 0x80	; 128
 43c:	8f bf       	out	0x3f, r24	; 63
 43e:	08 95       	ret

00000440 <__vector_6>:
}

ISR(TIMER1_CAPT_vect){
 440:	1f 92       	push	r1
 442:	0f 92       	push	r0
 444:	0f b6       	in	r0, 0x3f	; 63
 446:	0f 92       	push	r0
 448:	11 24       	eor	r1, r1
 44a:	2f 93       	push	r18
 44c:	3f 93       	push	r19
 44e:	4f 93       	push	r20
 450:	5f 93       	push	r21
 452:	6f 93       	push	r22
 454:	7f 93       	push	r23
 456:	8f 93       	push	r24
 458:	9f 93       	push	r25
 45a:	af 93       	push	r26
 45c:	bf 93       	push	r27
 45e:	ef 93       	push	r30
 460:	ff 93       	push	r31
	timer1_InCapture_isr();
 462:	e0 91 7e 00 	lds	r30, 0x007E	; 0x80007e <__data_end>
 466:	f0 91 7f 00 	lds	r31, 0x007F	; 0x80007f <__data_end+0x1>
 46a:	09 95       	icall
 46c:	ff 91       	pop	r31
 46e:	ef 91       	pop	r30
 470:	bf 91       	pop	r27
 472:	af 91       	pop	r26
 474:	9f 91       	pop	r25
 476:	8f 91       	pop	r24
 478:	7f 91       	pop	r23
 47a:	6f 91       	pop	r22
 47c:	5f 91       	pop	r21
 47e:	4f 91       	pop	r20
 480:	3f 91       	pop	r19
 482:	2f 91       	pop	r18
 484:	0f 90       	pop	r0
 486:	0f be       	out	0x3f, r0	; 63
 488:	0f 90       	pop	r0
 48a:	1f 90       	pop	r1
 48c:	18 95       	reti

0000048e <InCapture_isr>:
	}
}

static void InCapture_isr(void){

	t_arr[i] = ICR1;
 48e:	e0 91 80 00 	lds	r30, 0x0080	; 0x800080 <i>
 492:	f0 e0       	ldi	r31, 0x00	; 0
 494:	86 b5       	in	r24, 0x26	; 38
 496:	97 b5       	in	r25, 0x27	; 39
 498:	ee 0f       	add	r30, r30
 49a:	ff 1f       	adc	r31, r31
 49c:	e0 5a       	subi	r30, 0xA0	; 160
 49e:	ff 4f       	sbci	r31, 0xFF	; 255
 4a0:	91 83       	std	Z+1, r25	; 0x01
 4a2:	80 83       	st	Z, r24
	//Stop global interrupt
	if(i == 2){
 4a4:	80 91 80 00 	lds	r24, 0x0080	; 0x800080 <i>
 4a8:	82 30       	cpi	r24, 0x02	; 2
 4aa:	19 f4       	brne	.+6      	; 0x4b2 <InCapture_isr+0x24>
		//Stop Timer1 InCapture interrupt
		CLRBIT(TIMSK,TICIE1);
 4ac:	89 b7       	in	r24, 0x39	; 57
 4ae:	8f 7d       	andi	r24, 0xDF	; 223
 4b0:	89 bf       	out	0x39, r24	; 57
	}
	i++;
 4b2:	80 91 80 00 	lds	r24, 0x0080	; 0x800080 <i>
 4b6:	8f 5f       	subi	r24, 0xFF	; 255
 4b8:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <i>
	//trigger negative edge
	if(i == 1) {
 4bc:	80 91 80 00 	lds	r24, 0x0080	; 0x800080 <i>
 4c0:	81 30       	cpi	r24, 0x01	; 1
 4c2:	21 f4       	brne	.+8      	; 0x4cc <InCapture_isr+0x3e>
		CLRBIT(TCCR1B,ICES1);
 4c4:	8e b5       	in	r24, 0x2e	; 46
 4c6:	8f 7b       	andi	r24, 0xBF	; 191
 4c8:	8e bd       	out	0x2e, r24	; 46
 4ca:	08 95       	ret
	}
	//trigger positive edge
	else{
	   SETBIT(TCCR1B,ICES1);
 4cc:	8e b5       	in	r24, 0x2e	; 46
 4ce:	80 64       	ori	r24, 0x40	; 64
 4d0:	8e bd       	out	0x2e, r24	; 46
 4d2:	08 95       	ret

000004d4 <main>:

uint16_t t_arr[3] = {1,2,3};
volatile uint8_t i = 0;
int main(void)
{	
	timer1_InCapture_isr = InCapture_isr;
 4d4:	87 e4       	ldi	r24, 0x47	; 71
 4d6:	92 e0       	ldi	r25, 0x02	; 2
 4d8:	90 93 7f 00 	sts	0x007F, r25	; 0x80007f <__data_end+0x1>
 4dc:	80 93 7e 00 	sts	0x007E, r24	; 0x80007e <__data_end>
	TIME1_InCapture_init();//Configure timer 1 to be in input capture mode
 4e0:	0e 94 13 02 	call	0x426	; 0x426 <TIME1_InCapture_init>
	LCD_init();
 4e4:	0e 94 07 01 	call	0x20e	; 0x20e <LCD_init>

	
	
    while (1) 
    {	
		if(i == 3){
 4e8:	80 91 80 00 	lds	r24, 0x0080	; 0x800080 <i>
 4ec:	83 30       	cpi	r24, 0x03	; 3
 4ee:	e1 f7       	brne	.-8      	; 0x4e8 <main+0x14>
			LCD_write_command(0x80);
 4f0:	80 e8       	ldi	r24, 0x80	; 128
 4f2:	0e 94 97 00 	call	0x12e	; 0x12e <LCD_write_command>
			LCD_write_string((uint8_t*)"Period = ");
 4f6:	86 e6       	ldi	r24, 0x66	; 102
 4f8:	90 e0       	ldi	r25, 0x00	; 0
 4fa:	0e 94 bd 01 	call	0x37a	; 0x37a <LCD_write_string>
			LCD_write_num((t_arr[2] - t_arr[0])/16);
 4fe:	c0 e6       	ldi	r28, 0x60	; 96
 500:	d0 e0       	ldi	r29, 0x00	; 0
 502:	6c 81       	ldd	r22, Y+4	; 0x04
 504:	7d 81       	ldd	r23, Y+5	; 0x05
 506:	88 81       	ld	r24, Y
 508:	99 81       	ldd	r25, Y+1	; 0x01
 50a:	68 1b       	sub	r22, r24
 50c:	79 0b       	sbc	r23, r25
 50e:	72 95       	swap	r23
 510:	62 95       	swap	r22
 512:	6f 70       	andi	r22, 0x0F	; 15
 514:	67 27       	eor	r22, r23
 516:	7f 70       	andi	r23, 0x0F	; 15
 518:	67 27       	eor	r22, r23
 51a:	80 e0       	ldi	r24, 0x00	; 0
 51c:	90 e0       	ldi	r25, 0x00	; 0
 51e:	0e 94 d2 01 	call	0x3a4	; 0x3a4 <LCD_write_num>
			LCD_write_string((uint8_t*)"us");
 522:	80 e7       	ldi	r24, 0x70	; 112
 524:	90 e0       	ldi	r25, 0x00	; 0
 526:	0e 94 bd 01 	call	0x37a	; 0x37a <LCD_write_string>
			
			LCD_write_command(0xc0);
 52a:	80 ec       	ldi	r24, 0xC0	; 192
 52c:	0e 94 97 00 	call	0x12e	; 0x12e <LCD_write_command>
			LCD_write_string((uint8_t*)"Duty = ");
 530:	83 e7       	ldi	r24, 0x73	; 115
 532:	90 e0       	ldi	r25, 0x00	; 0
 534:	0e 94 bd 01 	call	0x37a	; 0x37a <LCD_write_string>
			LCD_write_num((((float)(t_arr[1] - t_arr[0]))/((float)(t_arr[2] - t_arr[0])))*100);
 538:	6a 81       	ldd	r22, Y+2	; 0x02
 53a:	7b 81       	ldd	r23, Y+3	; 0x03
 53c:	08 81       	ld	r16, Y
 53e:	19 81       	ldd	r17, Y+1	; 0x01
 540:	60 1b       	sub	r22, r16
 542:	71 0b       	sbc	r23, r17
 544:	80 e0       	ldi	r24, 0x00	; 0
 546:	90 e0       	ldi	r25, 0x00	; 0
 548:	0e 94 66 03 	call	0x6cc	; 0x6cc <__floatunsisf>
 54c:	6b 01       	movw	r12, r22
 54e:	7c 01       	movw	r14, r24
 550:	6c 81       	ldd	r22, Y+4	; 0x04
 552:	7d 81       	ldd	r23, Y+5	; 0x05
 554:	60 1b       	sub	r22, r16
 556:	71 0b       	sbc	r23, r17
 558:	80 e0       	ldi	r24, 0x00	; 0
 55a:	90 e0       	ldi	r25, 0x00	; 0
 55c:	0e 94 66 03 	call	0x6cc	; 0x6cc <__floatunsisf>
 560:	9b 01       	movw	r18, r22
 562:	ac 01       	movw	r20, r24
 564:	c7 01       	movw	r24, r14
 566:	b6 01       	movw	r22, r12
 568:	0e 94 c5 02 	call	0x58a	; 0x58a <__divsf3>
 56c:	20 e0       	ldi	r18, 0x00	; 0
 56e:	30 e0       	ldi	r19, 0x00	; 0
 570:	48 ec       	ldi	r20, 0xC8	; 200
 572:	52 e4       	ldi	r21, 0x42	; 66
 574:	0e 94 f4 03 	call	0x7e8	; 0x7e8 <__mulsf3>
 578:	0e 94 37 03 	call	0x66e	; 0x66e <__fixunssfsi>
 57c:	0e 94 d2 01 	call	0x3a4	; 0x3a4 <LCD_write_num>
			LCD_write_string((uint8_t*)"%");
 580:	8b e7       	ldi	r24, 0x7B	; 123
 582:	90 e0       	ldi	r25, 0x00	; 0
 584:	0e 94 bd 01 	call	0x37a	; 0x37a <LCD_write_string>
 588:	af cf       	rjmp	.-162    	; 0x4e8 <main+0x14>

0000058a <__divsf3>:
 58a:	0e 94 d9 02 	call	0x5b2	; 0x5b2 <__divsf3x>
 58e:	0c 94 ba 03 	jmp	0x774	; 0x774 <__fp_round>
 592:	0e 94 b3 03 	call	0x766	; 0x766 <__fp_pscB>
 596:	58 f0       	brcs	.+22     	; 0x5ae <__divsf3+0x24>
 598:	0e 94 ac 03 	call	0x758	; 0x758 <__fp_pscA>
 59c:	40 f0       	brcs	.+16     	; 0x5ae <__divsf3+0x24>
 59e:	29 f4       	brne	.+10     	; 0x5aa <__divsf3+0x20>
 5a0:	5f 3f       	cpi	r21, 0xFF	; 255
 5a2:	29 f0       	breq	.+10     	; 0x5ae <__divsf3+0x24>
 5a4:	0c 94 a3 03 	jmp	0x746	; 0x746 <__fp_inf>
 5a8:	51 11       	cpse	r21, r1
 5aa:	0c 94 ee 03 	jmp	0x7dc	; 0x7dc <__fp_szero>
 5ae:	0c 94 a9 03 	jmp	0x752	; 0x752 <__fp_nan>

000005b2 <__divsf3x>:
 5b2:	0e 94 cb 03 	call	0x796	; 0x796 <__fp_split3>
 5b6:	68 f3       	brcs	.-38     	; 0x592 <__divsf3+0x8>

000005b8 <__divsf3_pse>:
 5b8:	99 23       	and	r25, r25
 5ba:	b1 f3       	breq	.-20     	; 0x5a8 <__divsf3+0x1e>
 5bc:	55 23       	and	r21, r21
 5be:	91 f3       	breq	.-28     	; 0x5a4 <__divsf3+0x1a>
 5c0:	95 1b       	sub	r25, r21
 5c2:	55 0b       	sbc	r21, r21
 5c4:	bb 27       	eor	r27, r27
 5c6:	aa 27       	eor	r26, r26
 5c8:	62 17       	cp	r22, r18
 5ca:	73 07       	cpc	r23, r19
 5cc:	84 07       	cpc	r24, r20
 5ce:	38 f0       	brcs	.+14     	; 0x5de <__divsf3_pse+0x26>
 5d0:	9f 5f       	subi	r25, 0xFF	; 255
 5d2:	5f 4f       	sbci	r21, 0xFF	; 255
 5d4:	22 0f       	add	r18, r18
 5d6:	33 1f       	adc	r19, r19
 5d8:	44 1f       	adc	r20, r20
 5da:	aa 1f       	adc	r26, r26
 5dc:	a9 f3       	breq	.-22     	; 0x5c8 <__divsf3_pse+0x10>
 5de:	35 d0       	rcall	.+106    	; 0x64a <__divsf3_pse+0x92>
 5e0:	0e 2e       	mov	r0, r30
 5e2:	3a f0       	brmi	.+14     	; 0x5f2 <__divsf3_pse+0x3a>
 5e4:	e0 e8       	ldi	r30, 0x80	; 128
 5e6:	32 d0       	rcall	.+100    	; 0x64c <__divsf3_pse+0x94>
 5e8:	91 50       	subi	r25, 0x01	; 1
 5ea:	50 40       	sbci	r21, 0x00	; 0
 5ec:	e6 95       	lsr	r30
 5ee:	00 1c       	adc	r0, r0
 5f0:	ca f7       	brpl	.-14     	; 0x5e4 <__divsf3_pse+0x2c>
 5f2:	2b d0       	rcall	.+86     	; 0x64a <__divsf3_pse+0x92>
 5f4:	fe 2f       	mov	r31, r30
 5f6:	29 d0       	rcall	.+82     	; 0x64a <__divsf3_pse+0x92>
 5f8:	66 0f       	add	r22, r22
 5fa:	77 1f       	adc	r23, r23
 5fc:	88 1f       	adc	r24, r24
 5fe:	bb 1f       	adc	r27, r27
 600:	26 17       	cp	r18, r22
 602:	37 07       	cpc	r19, r23
 604:	48 07       	cpc	r20, r24
 606:	ab 07       	cpc	r26, r27
 608:	b0 e8       	ldi	r27, 0x80	; 128
 60a:	09 f0       	breq	.+2      	; 0x60e <__divsf3_pse+0x56>
 60c:	bb 0b       	sbc	r27, r27
 60e:	80 2d       	mov	r24, r0
 610:	bf 01       	movw	r22, r30
 612:	ff 27       	eor	r31, r31
 614:	93 58       	subi	r25, 0x83	; 131
 616:	5f 4f       	sbci	r21, 0xFF	; 255
 618:	3a f0       	brmi	.+14     	; 0x628 <__divsf3_pse+0x70>
 61a:	9e 3f       	cpi	r25, 0xFE	; 254
 61c:	51 05       	cpc	r21, r1
 61e:	78 f0       	brcs	.+30     	; 0x63e <__divsf3_pse+0x86>
 620:	0c 94 a3 03 	jmp	0x746	; 0x746 <__fp_inf>
 624:	0c 94 ee 03 	jmp	0x7dc	; 0x7dc <__fp_szero>
 628:	5f 3f       	cpi	r21, 0xFF	; 255
 62a:	e4 f3       	brlt	.-8      	; 0x624 <__divsf3_pse+0x6c>
 62c:	98 3e       	cpi	r25, 0xE8	; 232
 62e:	d4 f3       	brlt	.-12     	; 0x624 <__divsf3_pse+0x6c>
 630:	86 95       	lsr	r24
 632:	77 95       	ror	r23
 634:	67 95       	ror	r22
 636:	b7 95       	ror	r27
 638:	f7 95       	ror	r31
 63a:	9f 5f       	subi	r25, 0xFF	; 255
 63c:	c9 f7       	brne	.-14     	; 0x630 <__divsf3_pse+0x78>
 63e:	88 0f       	add	r24, r24
 640:	91 1d       	adc	r25, r1
 642:	96 95       	lsr	r25
 644:	87 95       	ror	r24
 646:	97 f9       	bld	r25, 7
 648:	08 95       	ret
 64a:	e1 e0       	ldi	r30, 0x01	; 1
 64c:	66 0f       	add	r22, r22
 64e:	77 1f       	adc	r23, r23
 650:	88 1f       	adc	r24, r24
 652:	bb 1f       	adc	r27, r27
 654:	62 17       	cp	r22, r18
 656:	73 07       	cpc	r23, r19
 658:	84 07       	cpc	r24, r20
 65a:	ba 07       	cpc	r27, r26
 65c:	20 f0       	brcs	.+8      	; 0x666 <__divsf3_pse+0xae>
 65e:	62 1b       	sub	r22, r18
 660:	73 0b       	sbc	r23, r19
 662:	84 0b       	sbc	r24, r20
 664:	ba 0b       	sbc	r27, r26
 666:	ee 1f       	adc	r30, r30
 668:	88 f7       	brcc	.-30     	; 0x64c <__divsf3_pse+0x94>
 66a:	e0 95       	com	r30
 66c:	08 95       	ret

0000066e <__fixunssfsi>:
 66e:	0e 94 d3 03 	call	0x7a6	; 0x7a6 <__fp_splitA>
 672:	88 f0       	brcs	.+34     	; 0x696 <__fixunssfsi+0x28>
 674:	9f 57       	subi	r25, 0x7F	; 127
 676:	98 f0       	brcs	.+38     	; 0x69e <__fixunssfsi+0x30>
 678:	b9 2f       	mov	r27, r25
 67a:	99 27       	eor	r25, r25
 67c:	b7 51       	subi	r27, 0x17	; 23
 67e:	b0 f0       	brcs	.+44     	; 0x6ac <__fixunssfsi+0x3e>
 680:	e1 f0       	breq	.+56     	; 0x6ba <__fixunssfsi+0x4c>
 682:	66 0f       	add	r22, r22
 684:	77 1f       	adc	r23, r23
 686:	88 1f       	adc	r24, r24
 688:	99 1f       	adc	r25, r25
 68a:	1a f0       	brmi	.+6      	; 0x692 <__fixunssfsi+0x24>
 68c:	ba 95       	dec	r27
 68e:	c9 f7       	brne	.-14     	; 0x682 <__fixunssfsi+0x14>
 690:	14 c0       	rjmp	.+40     	; 0x6ba <__fixunssfsi+0x4c>
 692:	b1 30       	cpi	r27, 0x01	; 1
 694:	91 f0       	breq	.+36     	; 0x6ba <__fixunssfsi+0x4c>
 696:	0e 94 ed 03 	call	0x7da	; 0x7da <__fp_zero>
 69a:	b1 e0       	ldi	r27, 0x01	; 1
 69c:	08 95       	ret
 69e:	0c 94 ed 03 	jmp	0x7da	; 0x7da <__fp_zero>
 6a2:	67 2f       	mov	r22, r23
 6a4:	78 2f       	mov	r23, r24
 6a6:	88 27       	eor	r24, r24
 6a8:	b8 5f       	subi	r27, 0xF8	; 248
 6aa:	39 f0       	breq	.+14     	; 0x6ba <__fixunssfsi+0x4c>
 6ac:	b9 3f       	cpi	r27, 0xF9	; 249
 6ae:	cc f3       	brlt	.-14     	; 0x6a2 <__fixunssfsi+0x34>
 6b0:	86 95       	lsr	r24
 6b2:	77 95       	ror	r23
 6b4:	67 95       	ror	r22
 6b6:	b3 95       	inc	r27
 6b8:	d9 f7       	brne	.-10     	; 0x6b0 <__fixunssfsi+0x42>
 6ba:	3e f4       	brtc	.+14     	; 0x6ca <__fixunssfsi+0x5c>
 6bc:	90 95       	com	r25
 6be:	80 95       	com	r24
 6c0:	70 95       	com	r23
 6c2:	61 95       	neg	r22
 6c4:	7f 4f       	sbci	r23, 0xFF	; 255
 6c6:	8f 4f       	sbci	r24, 0xFF	; 255
 6c8:	9f 4f       	sbci	r25, 0xFF	; 255
 6ca:	08 95       	ret

000006cc <__floatunsisf>:
 6cc:	e8 94       	clt
 6ce:	09 c0       	rjmp	.+18     	; 0x6e2 <__floatsisf+0x12>

000006d0 <__floatsisf>:
 6d0:	97 fb       	bst	r25, 7
 6d2:	3e f4       	brtc	.+14     	; 0x6e2 <__floatsisf+0x12>
 6d4:	90 95       	com	r25
 6d6:	80 95       	com	r24
 6d8:	70 95       	com	r23
 6da:	61 95       	neg	r22
 6dc:	7f 4f       	sbci	r23, 0xFF	; 255
 6de:	8f 4f       	sbci	r24, 0xFF	; 255
 6e0:	9f 4f       	sbci	r25, 0xFF	; 255
 6e2:	99 23       	and	r25, r25
 6e4:	a9 f0       	breq	.+42     	; 0x710 <__floatsisf+0x40>
 6e6:	f9 2f       	mov	r31, r25
 6e8:	96 e9       	ldi	r25, 0x96	; 150
 6ea:	bb 27       	eor	r27, r27
 6ec:	93 95       	inc	r25
 6ee:	f6 95       	lsr	r31
 6f0:	87 95       	ror	r24
 6f2:	77 95       	ror	r23
 6f4:	67 95       	ror	r22
 6f6:	b7 95       	ror	r27
 6f8:	f1 11       	cpse	r31, r1
 6fa:	f8 cf       	rjmp	.-16     	; 0x6ec <__floatsisf+0x1c>
 6fc:	fa f4       	brpl	.+62     	; 0x73c <__floatsisf+0x6c>
 6fe:	bb 0f       	add	r27, r27
 700:	11 f4       	brne	.+4      	; 0x706 <__floatsisf+0x36>
 702:	60 ff       	sbrs	r22, 0
 704:	1b c0       	rjmp	.+54     	; 0x73c <__floatsisf+0x6c>
 706:	6f 5f       	subi	r22, 0xFF	; 255
 708:	7f 4f       	sbci	r23, 0xFF	; 255
 70a:	8f 4f       	sbci	r24, 0xFF	; 255
 70c:	9f 4f       	sbci	r25, 0xFF	; 255
 70e:	16 c0       	rjmp	.+44     	; 0x73c <__floatsisf+0x6c>
 710:	88 23       	and	r24, r24
 712:	11 f0       	breq	.+4      	; 0x718 <__floatsisf+0x48>
 714:	96 e9       	ldi	r25, 0x96	; 150
 716:	11 c0       	rjmp	.+34     	; 0x73a <__floatsisf+0x6a>
 718:	77 23       	and	r23, r23
 71a:	21 f0       	breq	.+8      	; 0x724 <__floatsisf+0x54>
 71c:	9e e8       	ldi	r25, 0x8E	; 142
 71e:	87 2f       	mov	r24, r23
 720:	76 2f       	mov	r23, r22
 722:	05 c0       	rjmp	.+10     	; 0x72e <__floatsisf+0x5e>
 724:	66 23       	and	r22, r22
 726:	71 f0       	breq	.+28     	; 0x744 <__floatsisf+0x74>
 728:	96 e8       	ldi	r25, 0x86	; 134
 72a:	86 2f       	mov	r24, r22
 72c:	70 e0       	ldi	r23, 0x00	; 0
 72e:	60 e0       	ldi	r22, 0x00	; 0
 730:	2a f0       	brmi	.+10     	; 0x73c <__floatsisf+0x6c>
 732:	9a 95       	dec	r25
 734:	66 0f       	add	r22, r22
 736:	77 1f       	adc	r23, r23
 738:	88 1f       	adc	r24, r24
 73a:	da f7       	brpl	.-10     	; 0x732 <__floatsisf+0x62>
 73c:	88 0f       	add	r24, r24
 73e:	96 95       	lsr	r25
 740:	87 95       	ror	r24
 742:	97 f9       	bld	r25, 7
 744:	08 95       	ret

00000746 <__fp_inf>:
 746:	97 f9       	bld	r25, 7
 748:	9f 67       	ori	r25, 0x7F	; 127
 74a:	80 e8       	ldi	r24, 0x80	; 128
 74c:	70 e0       	ldi	r23, 0x00	; 0
 74e:	60 e0       	ldi	r22, 0x00	; 0
 750:	08 95       	ret

00000752 <__fp_nan>:
 752:	9f ef       	ldi	r25, 0xFF	; 255
 754:	80 ec       	ldi	r24, 0xC0	; 192
 756:	08 95       	ret

00000758 <__fp_pscA>:
 758:	00 24       	eor	r0, r0
 75a:	0a 94       	dec	r0
 75c:	16 16       	cp	r1, r22
 75e:	17 06       	cpc	r1, r23
 760:	18 06       	cpc	r1, r24
 762:	09 06       	cpc	r0, r25
 764:	08 95       	ret

00000766 <__fp_pscB>:
 766:	00 24       	eor	r0, r0
 768:	0a 94       	dec	r0
 76a:	12 16       	cp	r1, r18
 76c:	13 06       	cpc	r1, r19
 76e:	14 06       	cpc	r1, r20
 770:	05 06       	cpc	r0, r21
 772:	08 95       	ret

00000774 <__fp_round>:
 774:	09 2e       	mov	r0, r25
 776:	03 94       	inc	r0
 778:	00 0c       	add	r0, r0
 77a:	11 f4       	brne	.+4      	; 0x780 <__fp_round+0xc>
 77c:	88 23       	and	r24, r24
 77e:	52 f0       	brmi	.+20     	; 0x794 <__fp_round+0x20>
 780:	bb 0f       	add	r27, r27
 782:	40 f4       	brcc	.+16     	; 0x794 <__fp_round+0x20>
 784:	bf 2b       	or	r27, r31
 786:	11 f4       	brne	.+4      	; 0x78c <__fp_round+0x18>
 788:	60 ff       	sbrs	r22, 0
 78a:	04 c0       	rjmp	.+8      	; 0x794 <__fp_round+0x20>
 78c:	6f 5f       	subi	r22, 0xFF	; 255
 78e:	7f 4f       	sbci	r23, 0xFF	; 255
 790:	8f 4f       	sbci	r24, 0xFF	; 255
 792:	9f 4f       	sbci	r25, 0xFF	; 255
 794:	08 95       	ret

00000796 <__fp_split3>:
 796:	57 fd       	sbrc	r21, 7
 798:	90 58       	subi	r25, 0x80	; 128
 79a:	44 0f       	add	r20, r20
 79c:	55 1f       	adc	r21, r21
 79e:	59 f0       	breq	.+22     	; 0x7b6 <__fp_splitA+0x10>
 7a0:	5f 3f       	cpi	r21, 0xFF	; 255
 7a2:	71 f0       	breq	.+28     	; 0x7c0 <__fp_splitA+0x1a>
 7a4:	47 95       	ror	r20

000007a6 <__fp_splitA>:
 7a6:	88 0f       	add	r24, r24
 7a8:	97 fb       	bst	r25, 7
 7aa:	99 1f       	adc	r25, r25
 7ac:	61 f0       	breq	.+24     	; 0x7c6 <__fp_splitA+0x20>
 7ae:	9f 3f       	cpi	r25, 0xFF	; 255
 7b0:	79 f0       	breq	.+30     	; 0x7d0 <__fp_splitA+0x2a>
 7b2:	87 95       	ror	r24
 7b4:	08 95       	ret
 7b6:	12 16       	cp	r1, r18
 7b8:	13 06       	cpc	r1, r19
 7ba:	14 06       	cpc	r1, r20
 7bc:	55 1f       	adc	r21, r21
 7be:	f2 cf       	rjmp	.-28     	; 0x7a4 <__fp_split3+0xe>
 7c0:	46 95       	lsr	r20
 7c2:	f1 df       	rcall	.-30     	; 0x7a6 <__fp_splitA>
 7c4:	08 c0       	rjmp	.+16     	; 0x7d6 <__fp_splitA+0x30>
 7c6:	16 16       	cp	r1, r22
 7c8:	17 06       	cpc	r1, r23
 7ca:	18 06       	cpc	r1, r24
 7cc:	99 1f       	adc	r25, r25
 7ce:	f1 cf       	rjmp	.-30     	; 0x7b2 <__fp_splitA+0xc>
 7d0:	86 95       	lsr	r24
 7d2:	71 05       	cpc	r23, r1
 7d4:	61 05       	cpc	r22, r1
 7d6:	08 94       	sec
 7d8:	08 95       	ret

000007da <__fp_zero>:
 7da:	e8 94       	clt

000007dc <__fp_szero>:
 7dc:	bb 27       	eor	r27, r27
 7de:	66 27       	eor	r22, r22
 7e0:	77 27       	eor	r23, r23
 7e2:	cb 01       	movw	r24, r22
 7e4:	97 f9       	bld	r25, 7
 7e6:	08 95       	ret

000007e8 <__mulsf3>:
 7e8:	0e 94 07 04 	call	0x80e	; 0x80e <__mulsf3x>
 7ec:	0c 94 ba 03 	jmp	0x774	; 0x774 <__fp_round>
 7f0:	0e 94 ac 03 	call	0x758	; 0x758 <__fp_pscA>
 7f4:	38 f0       	brcs	.+14     	; 0x804 <__DATA_REGION_LENGTH__+0x4>
 7f6:	0e 94 b3 03 	call	0x766	; 0x766 <__fp_pscB>
 7fa:	20 f0       	brcs	.+8      	; 0x804 <__DATA_REGION_LENGTH__+0x4>
 7fc:	95 23       	and	r25, r21
 7fe:	11 f0       	breq	.+4      	; 0x804 <__DATA_REGION_LENGTH__+0x4>
 800:	0c 94 a3 03 	jmp	0x746	; 0x746 <__fp_inf>
 804:	0c 94 a9 03 	jmp	0x752	; 0x752 <__fp_nan>
 808:	11 24       	eor	r1, r1
 80a:	0c 94 ee 03 	jmp	0x7dc	; 0x7dc <__fp_szero>

0000080e <__mulsf3x>:
 80e:	0e 94 cb 03 	call	0x796	; 0x796 <__fp_split3>
 812:	70 f3       	brcs	.-36     	; 0x7f0 <__mulsf3+0x8>

00000814 <__mulsf3_pse>:
 814:	95 9f       	mul	r25, r21
 816:	c1 f3       	breq	.-16     	; 0x808 <__DATA_REGION_LENGTH__+0x8>
 818:	95 0f       	add	r25, r21
 81a:	50 e0       	ldi	r21, 0x00	; 0
 81c:	55 1f       	adc	r21, r21
 81e:	62 9f       	mul	r22, r18
 820:	f0 01       	movw	r30, r0
 822:	72 9f       	mul	r23, r18
 824:	bb 27       	eor	r27, r27
 826:	f0 0d       	add	r31, r0
 828:	b1 1d       	adc	r27, r1
 82a:	63 9f       	mul	r22, r19
 82c:	aa 27       	eor	r26, r26
 82e:	f0 0d       	add	r31, r0
 830:	b1 1d       	adc	r27, r1
 832:	aa 1f       	adc	r26, r26
 834:	64 9f       	mul	r22, r20
 836:	66 27       	eor	r22, r22
 838:	b0 0d       	add	r27, r0
 83a:	a1 1d       	adc	r26, r1
 83c:	66 1f       	adc	r22, r22
 83e:	82 9f       	mul	r24, r18
 840:	22 27       	eor	r18, r18
 842:	b0 0d       	add	r27, r0
 844:	a1 1d       	adc	r26, r1
 846:	62 1f       	adc	r22, r18
 848:	73 9f       	mul	r23, r19
 84a:	b0 0d       	add	r27, r0
 84c:	a1 1d       	adc	r26, r1
 84e:	62 1f       	adc	r22, r18
 850:	83 9f       	mul	r24, r19
 852:	a0 0d       	add	r26, r0
 854:	61 1d       	adc	r22, r1
 856:	22 1f       	adc	r18, r18
 858:	74 9f       	mul	r23, r20
 85a:	33 27       	eor	r19, r19
 85c:	a0 0d       	add	r26, r0
 85e:	61 1d       	adc	r22, r1
 860:	23 1f       	adc	r18, r19
 862:	84 9f       	mul	r24, r20
 864:	60 0d       	add	r22, r0
 866:	21 1d       	adc	r18, r1
 868:	82 2f       	mov	r24, r18
 86a:	76 2f       	mov	r23, r22
 86c:	6a 2f       	mov	r22, r26
 86e:	11 24       	eor	r1, r1
 870:	9f 57       	subi	r25, 0x7F	; 127
 872:	50 40       	sbci	r21, 0x00	; 0
 874:	9a f0       	brmi	.+38     	; 0x89c <__stack+0x3d>
 876:	f1 f0       	breq	.+60     	; 0x8b4 <__stack+0x55>
 878:	88 23       	and	r24, r24
 87a:	4a f0       	brmi	.+18     	; 0x88e <__stack+0x2f>
 87c:	ee 0f       	add	r30, r30
 87e:	ff 1f       	adc	r31, r31
 880:	bb 1f       	adc	r27, r27
 882:	66 1f       	adc	r22, r22
 884:	77 1f       	adc	r23, r23
 886:	88 1f       	adc	r24, r24
 888:	91 50       	subi	r25, 0x01	; 1
 88a:	50 40       	sbci	r21, 0x00	; 0
 88c:	a9 f7       	brne	.-22     	; 0x878 <__stack+0x19>
 88e:	9e 3f       	cpi	r25, 0xFE	; 254
 890:	51 05       	cpc	r21, r1
 892:	80 f0       	brcs	.+32     	; 0x8b4 <__stack+0x55>
 894:	0c 94 a3 03 	jmp	0x746	; 0x746 <__fp_inf>
 898:	0c 94 ee 03 	jmp	0x7dc	; 0x7dc <__fp_szero>
 89c:	5f 3f       	cpi	r21, 0xFF	; 255
 89e:	e4 f3       	brlt	.-8      	; 0x898 <__stack+0x39>
 8a0:	98 3e       	cpi	r25, 0xE8	; 232
 8a2:	d4 f3       	brlt	.-12     	; 0x898 <__stack+0x39>
 8a4:	86 95       	lsr	r24
 8a6:	77 95       	ror	r23
 8a8:	67 95       	ror	r22
 8aa:	b7 95       	ror	r27
 8ac:	f7 95       	ror	r31
 8ae:	e7 95       	ror	r30
 8b0:	9f 5f       	subi	r25, 0xFF	; 255
 8b2:	c1 f7       	brne	.-16     	; 0x8a4 <__stack+0x45>
 8b4:	fe 2b       	or	r31, r30
 8b6:	88 0f       	add	r24, r24
 8b8:	91 1d       	adc	r25, r1
 8ba:	96 95       	lsr	r25
 8bc:	87 95       	ror	r24
 8be:	97 f9       	bld	r25, 7
 8c0:	08 95       	ret

000008c2 <__udivmodsi4>:
 8c2:	a1 e2       	ldi	r26, 0x21	; 33
 8c4:	1a 2e       	mov	r1, r26
 8c6:	aa 1b       	sub	r26, r26
 8c8:	bb 1b       	sub	r27, r27
 8ca:	fd 01       	movw	r30, r26
 8cc:	0d c0       	rjmp	.+26     	; 0x8e8 <__udivmodsi4_ep>

000008ce <__udivmodsi4_loop>:
 8ce:	aa 1f       	adc	r26, r26
 8d0:	bb 1f       	adc	r27, r27
 8d2:	ee 1f       	adc	r30, r30
 8d4:	ff 1f       	adc	r31, r31
 8d6:	a2 17       	cp	r26, r18
 8d8:	b3 07       	cpc	r27, r19
 8da:	e4 07       	cpc	r30, r20
 8dc:	f5 07       	cpc	r31, r21
 8de:	20 f0       	brcs	.+8      	; 0x8e8 <__udivmodsi4_ep>
 8e0:	a2 1b       	sub	r26, r18
 8e2:	b3 0b       	sbc	r27, r19
 8e4:	e4 0b       	sbc	r30, r20
 8e6:	f5 0b       	sbc	r31, r21

000008e8 <__udivmodsi4_ep>:
 8e8:	66 1f       	adc	r22, r22
 8ea:	77 1f       	adc	r23, r23
 8ec:	88 1f       	adc	r24, r24
 8ee:	99 1f       	adc	r25, r25
 8f0:	1a 94       	dec	r1
 8f2:	69 f7       	brne	.-38     	; 0x8ce <__udivmodsi4_loop>
 8f4:	60 95       	com	r22
 8f6:	70 95       	com	r23
 8f8:	80 95       	com	r24
 8fa:	90 95       	com	r25
 8fc:	9b 01       	movw	r18, r22
 8fe:	ac 01       	movw	r20, r24
 900:	bd 01       	movw	r22, r26
 902:	cf 01       	movw	r24, r30
 904:	08 95       	ret

00000906 <_exit>:
 906:	f8 94       	cli

00000908 <__stop_program>:
 908:	ff cf       	rjmp	.-2      	; 0x908 <__stop_program>
